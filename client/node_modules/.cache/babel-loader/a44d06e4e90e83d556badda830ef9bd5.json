{"ast":null,"code":"import _regeneratorRuntime from \"/Users/keenanheller/Desktop/bootcamp-homeworks/sportsbook/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _objectSpread from \"/Users/keenanheller/Desktop/bootcamp-homeworks/sportsbook/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _asyncToGenerator from \"/Users/keenanheller/Desktop/bootcamp-homeworks/sportsbook/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/Users/keenanheller/Desktop/bootcamp-homeworks/sportsbook/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/keenanheller/Desktop/bootcamp-homeworks/sportsbook/client/src/components/ActiveGames.js\";\nimport React, { useEffect, useState, useContext } from 'react';\nimport API from '../utils/API';\nimport ActiveLines from './ActiveLines';\nimport { SportsContext } from './ActiveSports';\nexport var GamesContext = React.createContext();\n\nfunction ActiveGames() {\n  // const sports = useContext(SportsContext);\n  // const sports = useContext(SportsContext);\n  var moneyLineArr; // console.log(sports)\n\n  var _useState = useState({\n    moneyline: null,\n    spread: null\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      games = _useState2[0],\n      setGames = _useState2[1];\n\n  var _useState3 = useState(true),\n      _useState4 = _slicedToArray(_useState3, 2),\n      isLoading = _useState4[0],\n      setIsLoading = _useState4[1];\n\n  var sports = useContext(SportsContext);\n  useEffect(function () {\n    var fetchData = /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var getMoneyLines, getSpreadLines;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                console.log(sports);\n                _context.next = 3;\n                return API.getLines(sports[1], 'moneyline').then(function (res) {\n                  return setGames(_objectSpread({}, games, {\n                    moneyline: res.data.data\n                  }));\n                }).catch(function (err) {\n                  console.log(err);\n                });\n\n              case 3:\n                getMoneyLines = _context.sent;\n                _context.next = 6;\n                return API.getLines(sports[1], 'spread').then(function (res) {\n                  return setGames(_objectSpread({}, games, {\n                    spread: res.data\n                  }));\n                }, setIsLoading(false)).catch(function (err) {\n                  console.log(err);\n                });\n\n              case 6:\n                getSpreadLines = _context.sent;\n\n              case 7:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function fetchData() {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    fetchData();\n  }, []); // async function getMoneyLine() {\n  //   await API.getLines(sports[1], 'moneyline')\n  //     .then(res => {\n  //       setGames(prevGames => [\n  //         ...prevGames,\n  //         {\n  //           moneyline: res.data.data\n  //         }\n  //       ]);\n  //     })\n  //     .catch(err => {\n  //       console.log(err)\n  //     });\n  // };\n  // async function getSpreadLine() {\n  //   await API.getLines(sports[1], 'spread')\n  //     .then(res => {\n  //       setGames(prevGames => [\n  //         ...prevGames, \n  //         {\n  //           spread: res.data.data\n  //         }\n  //       ])\n  //       console.log(games);\n  //     })\n  //     .catch(err => {\n  //       console.log(err)\n  //     });\n  // };\n  // async function getTotalsLine() {\n  //   await API.getLines(sports[1], 'totals')\n  //     .then(res => {\n  //       setGames(prevGames => [\n  //         ...prevGames,\n  //         {\n  //           totals: res.data.data  \n  //         }\n  //       ])\n  //       console.log(games);\n  //     })\n  //     .catch(err => {\n  //       console.log(err)\n  //     });\n  // };\n  //   fetchData();\n  // }, []);\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 5\n    }\n  }, isLoading ? '' : /*#__PURE__*/React.createElement(GamesContext.Provider, {\n    value: games,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ActiveLines, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 11\n    }\n  })));\n  {\n    /* [{games}] */\n  }\n  {\n    /* {games.map(game => <div key={game.home_team}>{game.teams[0]} vs. {game.teams[1]}</div>)} */\n  }\n  {\n    /* <GamesContext.Provider value={{games}}>\n     <ActiveLines />\n    </GamesContext.Provider> */\n  }\n}\n\n;\nexport default ActiveGames;","map":{"version":3,"sources":["/Users/keenanheller/Desktop/bootcamp-homeworks/sportsbook/client/src/components/ActiveGames.js"],"names":["React","useEffect","useState","useContext","API","ActiveLines","SportsContext","GamesContext","createContext","ActiveGames","moneyLineArr","moneyline","spread","games","setGames","isLoading","setIsLoading","sports","fetchData","console","log","getLines","then","res","data","catch","err","getMoneyLines","getSpreadLines"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,UAArC,QAAuD,OAAvD;AACA,OAAOC,GAAP,MAAgB,cAAhB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,SAASC,aAAT,QAA8B,gBAA9B;AACA,OAAO,IAAMC,YAAY,GAAGP,KAAK,CAACQ,aAAN,EAArB;;AAEP,SAASC,WAAT,GAAuB;AACrB;AACA;AACA,MAAIC,YAAJ,CAHqB,CAKrB;;AALqB,kBAMKR,QAAQ,CAAC;AAAES,IAAAA,SAAS,EAAE,IAAb;AAAmBC,IAAAA,MAAM,EAAE;AAA3B,GAAD,CANb;AAAA;AAAA,MAMdC,KANc;AAAA,MAMPC,QANO;;AAAA,mBAOaZ,QAAQ,CAAC,IAAD,CAPrB;AAAA;AAAA,MAOda,SAPc;AAAA,MAOHC,YAPG;;AAQrB,MAAMC,MAAM,GAAGd,UAAU,CAACG,aAAD,CAAzB;AAEAL,EAAAA,SAAS,CAAC,YAAM;AACd,QAAMiB,SAAS;AAAA,0EAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAChBC,gBAAAA,OAAO,CAACC,GAAR,CAAYH,MAAZ;AADgB;AAAA,uBAEab,GAAG,CAACiB,QAAJ,CAAaJ,MAAM,CAAC,CAAD,CAAnB,EAAwB,WAAxB,CAAD,CACzBK,IADyB,CACpB,UAAAC,GAAG;AAAA,yBAAIT,QAAQ,mBAChBD,KADgB;AAEnBF,oBAAAA,SAAS,EAAEY,GAAG,CAACC,IAAJ,CAASA;AAFD,qBAAZ;AAAA,iBADiB,EAKzBC,KALyB,CAKnB,UAAAC,GAAG,EAAI;AACZP,kBAAAA,OAAO,CAACC,GAAR,CAAYM,GAAZ;AACD,iBAPyB,CAFZ;;AAAA;AAEVC,gBAAAA,aAFU;AAAA;AAAA,uBAUavB,GAAG,CAACiB,QAAJ,CAAaJ,MAAM,CAAC,CAAD,CAAnB,EAAwB,QAAxB,EAC1BK,IAD0B,CACrB,UAAAC,GAAG;AAAA,yBAAIT,QAAQ,mBAChBD,KADgB;AAEnBD,oBAAAA,MAAM,EAAEW,GAAG,CAACC;AAFO,qBAAZ;AAAA,iBADkB,EAKzBR,YAAY,CAAC,KAAD,CALa,EAO1BS,KAP0B,CAOpB,UAAAC,GAAG,EAAI;AACVP,kBAAAA,OAAO,CAACC,GAAR,CAAYM,GAAZ;AACH,iBAT0B,CAVb;;AAAA;AAUVE,gBAAAA,cAVU;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAH;;AAAA,sBAATV,SAAS;AAAA;AAAA;AAAA,OAAf;;AA8BAA,IAAAA,SAAS;AACV,GAhCQ,EAgCN,EAhCM,CAAT,CAVqB,CA4CnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEF;AACA;;AAEA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGH,SAAS,GAAG,EAAH,gBACR,oBAAC,YAAD,CAAc,QAAd;AAAuB,IAAA,KAAK,EAAEF,KAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAFJ,CADF;AASI;AAAC;AAAgB;AACjB;AAAC;AAA+F;AAChG;AAAC;AACP;AACA;AAAkC;AAGjC;;AAAA;AAED,eAAeJ,WAAf","sourcesContent":["import React, { useEffect, useState, useContext } from 'react';\nimport API from '../utils/API';\nimport ActiveLines from './ActiveLines';\nimport { SportsContext } from './ActiveSports';\nexport const GamesContext = React.createContext();\n\nfunction ActiveGames() {\n  // const sports = useContext(SportsContext);\n  // const sports = useContext(SportsContext);\n  let moneyLineArr;\n\n  // console.log(sports)\n  const [games, setGames] = useState({ moneyline: null, spread: null });\n  const [isLoading, setIsLoading] = useState(true);\n  const sports = useContext(SportsContext);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      console.log(sports);\n      const getMoneyLines = await (API.getLines(sports[1], 'moneyline'))\n        .then(res => setGames({\n          ...games,\n          moneyline: res.data.data\n        }))\n        .catch(err => {\n          console.log(err)\n        });\n      const getSpreadLines = await API.getLines(sports[1], 'spread')\n        .then(res => setGames({\n          ...games,\n          spread: res.data\n        }),\n          setIsLoading(false)\n        )\n        .catch(err => {\n            console.log(err)\n        });\n\n      // setGames(\n      //   { \n      //     moneyline: 'hi', \n      //     spread: getSpreadLines \n      //   },\n      //   console.log(games)\n      // );\n\n    };\n    fetchData();\n  }, []);\n\n    // async function getMoneyLine() {\n    //   await API.getLines(sports[1], 'moneyline')\n    //     .then(res => {\n    //       setGames(prevGames => [\n    //         ...prevGames,\n    //         {\n    //           moneyline: res.data.data\n    //         }\n    //       ]);\n    //     })\n    //     .catch(err => {\n    //       console.log(err)\n    //     });\n    // };\n\n    // async function getSpreadLine() {\n    //   await API.getLines(sports[1], 'spread')\n    //     .then(res => {\n    //       setGames(prevGames => [\n    //         ...prevGames, \n    //         {\n    //           spread: res.data.data\n    //         }\n    //       ])\n    //       console.log(games);\n    //     })\n    //     .catch(err => {\n    //       console.log(err)\n    //     });\n    // };\n\n    // async function getTotalsLine() {\n    //   await API.getLines(sports[1], 'totals')\n    //     .then(res => {\n    //       setGames(prevGames => [\n    //         ...prevGames,\n    //         {\n    //           totals: res.data.data  \n    //         }\n    //       ])\n    //       console.log(games);\n    //     })\n    //     .catch(err => {\n    //       console.log(err)\n    //     });\n    // };\n\n  //   fetchData();\n  // }, []);\n\n  return (\n    <div>\n      {isLoading ? '' :\n        <GamesContext.Provider value={games}>\n          <ActiveLines />\n        </GamesContext.Provider>\n      }\n    </div>\n  );\n      {/* [{games}] */}\n      {/* {games.map(game => <div key={game.home_team}>{game.teams[0]} vs. {game.teams[1]}</div>)} */}\n      {/* <GamesContext.Provider value={{games}}>\n        <ActiveLines />\n      </GamesContext.Provider> */}\n    \n  \n};\n\nexport default ActiveGames;\n"]},"metadata":{},"sourceType":"module"}