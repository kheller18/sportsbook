{"ast":null,"code":"import _toConsumableArray from \"/Users/keenanheller/Desktop/bootcamp-homeworks/sportsbook/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _regeneratorRuntime from \"/Users/keenanheller/Desktop/bootcamp-homeworks/sportsbook/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/keenanheller/Desktop/bootcamp-homeworks/sportsbook/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/Users/keenanheller/Desktop/bootcamp-homeworks/sportsbook/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/keenanheller/Desktop/bootcamp-homeworks/sportsbook/client/src/components/RenderBetSlips.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react'; // import '../styles/BetSlip.css';\n\nimport API from '../utils/API';\nimport BetSlip from './BetSlip';\nimport Button from './Button';\nimport BetSlipConfirm from './BetSlipConfirm';\n\nvar RenderBetSlips = function RenderBetSlips(props) {\n  _s();\n\n  var _useState = useState(undefined),\n      _useState2 = _slicedToArray(_useState, 2),\n      toLose = _useState2[0],\n      setToLose = _useState2[1];\n\n  var _useState3 = useState(),\n      _useState4 = _slicedToArray(_useState3, 2),\n      toWin = _useState4[0],\n      setToWin = _useState4[1];\n\n  var newSlips = props.data;\n  console.log();\n  var slipSend = [];\n\n  var _useState5 = useState([]),\n      _useState6 = _slicedToArray(_useState5, 2),\n      submitSlips = _useState6[0],\n      setSubmitSlips = _useState6[1];\n\n  var _useState7 = useState([]),\n      _useState8 = _slicedToArray(_useState7, 2),\n      slipList = _useState8[0],\n      setSlipList = _useState8[1];\n\n  var _useState9 = useState([]),\n      _useState10 = _slicedToArray(_useState9, 2),\n      submittedSlips = _useState10[0],\n      setSubmittedSlips = _useState10[1];\n\n  var _useState11 = useState(false),\n      _useState12 = _slicedToArray(_useState11, 2),\n      isSubmitted = _useState12[0],\n      setIsSubmitted = _useState12[1];\n\n  var send = true;\n\n  var handleDelete = function handleDelete(e) {\n    console.log(e);\n    console.log(e.target.id);\n    console.log(slipList);\n    var newList = slipList.filter(function (slip, id) {\n      return id != e.target.id;\n    });\n    console.log(newList);\n    setSlipList(newList);\n    newSlips = {};\n  };\n\n  var handleClear = function handleClear() {\n    newSlips = {};\n    setSlipList([]);\n  };\n\n  var updateSlip = function updateSlip(id, attributes) {\n    var index = slipList.findIndex(function (x) {\n      return x.id == id;\n    });\n    var updateList = slipList.slice();\n    console.log(index);\n\n    if (index == -1) {} else {// setSlipList([...])\n    }\n  };\n\n  var updatePage = function updatePage() {\n    setIsSubmitted(true); // props.onSubmit(slipList);\n\n    props.passSlipState('submitted');\n    props.passSlipData(slipList);\n    setSlipList([]); // setTimout((), 5000)\n  };\n\n  var handleChange = function handleChange(e, data) {\n    console.log(data);\n    console.log(e);\n    console.log(data.odds.toString()[0]);\n\n    switch (data.odds.toString()[0]) {\n      case '-':\n        console.log(data.odds);\n        var tempCalc = Math.abs(e.target.value * data.odds * .01);\n        console.log(tempCalc);\n        var finalCalc = tempCalc - e.target.value;\n        setToLose(e.target.value);\n        data.toLose = e.target.value;\n        console.log((e.target.value - finalCalc).toFixed(2));\n        setToWin((e.target.value - finalCalc).toFixed(2));\n        data.toWin = (e.target.value - finalCalc).toFixed(2);\n        console.log(data); // return data;\n\n        var index = slipList.findIndex(function (x) {\n          return console.log(x);\n        });\n\n        if (slipList.length === 1) {\n          slipList.map(function (slip) {\n            console.log(slip);\n          });\n        } else {}\n\n        var slice = slipList.slice(0, parseInt(e.target.id));\n        console.log(slice);\n        console.log(slipList); // console.log('slice', slice)\n\n        break;\n\n      default:\n        setToLose(e.target.value);\n        data.toLose = e.target.value;\n        console.log((e.target.value * data.odds * .01).toFixed(2));\n        setToWin((e.target.value * data.odds * .01).toFixed(2));\n        data.toWin = (e.target.value * data.odds * .01).toFixed(2);\n        console.log(slipList);\n        break;\n    }\n\n    ;\n  };\n\n  var handleSubmit = function handleSubmit(event) {\n    event.preventDefault();\n    event.persist();\n    console.log(slipList);\n    var userData = JSON.parse(localStorage.getItem('user')); // function to post slip data based on slip type\n\n    var slipData = /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                slipList.map(function (slip) {\n                  console.log(slip);\n                  console.log(slip.slipData.toLose);\n\n                  if (slip.slipData.toLose === '' || slip.slipData.toLose < 5) {\n                    console.log('nope');\n                    send = false;\n                  } else {\n                    slipSend.push({\n                      userId: userData._id,\n                      gameKey: slip.data.key,\n                      betType: slip.slipData.type,\n                      team: slip.slipData.team,\n                      line: slip.slipData.line,\n                      odds: slip.slipData.odds,\n                      toLose: slip.slipData.toLose,\n                      toWin: slip.slipData.toWin,\n                      status: slip.slipData.status,\n                      outcome: slip.slipData.outcome,\n                      payout: slip.slipData.payout\n                    });\n                  }\n                });\n\n                if (!(send === true)) {\n                  _context.next = 4;\n                  break;\n                }\n\n                _context.next = 4;\n                return API.submitBetSlip(slipSend).then(function (res) {\n                  console.log(res);\n\n                  if (res.status === 200) {\n                    console.log('200'); // setIsSubmitted(true);\n\n                    updatePage(); // return (\n                    //   <div>\n                    //     <BetSlipConfirm data={res.data} />\n                    //   </div>\n                    // )\n                  }\n                }).catch(function (err) {\n                  console.log(err);\n                });\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function slipData() {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    slipData();\n  };\n\n  useEffect(function () {\n    // setSlips(slips);\n    // const slips = props.data;\n    // const [slipList, setSlipList] = useState();\n    console.log('mounted');\n    console.log(newSlips);\n\n    if (newSlips === undefined || newSlips === {} || newSlips === null) {} else {\n      setSlipList(function (slipList) {\n        return [].concat(_toConsumableArray(slipList), [newSlips]);\n      });\n      console.log(\"added\");\n    }\n\n    console.log(slipList); // setSlips(slips)\n  }, [newSlips]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"slip\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"slip-title\",\n      children: \"BET SLIP\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"slip-tabs\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"slip-tab\",\n        children: \"CART\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"slip-tab\",\n        children: \"PENDING\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 7\n    }, _this), slipList !== undefined && slipList.length !== 0 ? // (slipList === undefined || slipList.length === 0) ? '' :\n    slipList.map(function (slip, i) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(BetSlip, {\n          data: slip,\n          id: i,\n          onRemove: handleDelete,\n          onSubmit: handleSubmit,\n          onChange: handleChange,\n          onUpdate: updateSlip,\n          toWin: toWin\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 17\n        }, _this)\n      }, slip.data.key, false, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 15\n      }, _this);\n    }) : '', slipList === undefined || slipList.length === 0 || slipList === [] ? '' : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"slip-buttons\",\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        onClick: handleClear,\n        id: props.id,\n        type: \"button\",\n        className: \"slip-button\",\n        children: \"CANCEL\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 13\n      }, _this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: handleSubmit,\n        className: \"slip-button\",\n        id: \"submit-slip\",\n        children: \"PLACE BET(S)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 13\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 11\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 177,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(RenderBetSlips, \"CAYP/lfsV9UBa70J2Gv37G1omo4=\");\n\n_c = RenderBetSlips;\nexport default RenderBetSlips; // take the value from the slip, set it to the array here, then re render the whole page using useffect dependency\n\nvar _c;\n\n$RefreshReg$(_c, \"RenderBetSlips\");","map":{"version":3,"sources":["/Users/keenanheller/Desktop/bootcamp-homeworks/sportsbook/client/src/components/RenderBetSlips.js"],"names":["React","useEffect","useState","API","BetSlip","Button","BetSlipConfirm","RenderBetSlips","props","undefined","toLose","setToLose","toWin","setToWin","newSlips","data","console","log","slipSend","submitSlips","setSubmitSlips","slipList","setSlipList","submittedSlips","setSubmittedSlips","isSubmitted","setIsSubmitted","send","handleDelete","e","target","id","newList","filter","slip","handleClear","updateSlip","attributes","index","findIndex","x","updateList","slice","updatePage","passSlipState","passSlipData","handleChange","odds","toString","tempCalc","Math","abs","value","finalCalc","toFixed","length","map","parseInt","handleSubmit","event","preventDefault","persist","userData","JSON","parse","localStorage","getItem","slipData","push","userId","_id","gameKey","key","betType","type","team","line","status","outcome","payout","submitBetSlip","then","res","catch","err","i"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\n// import '../styles/BetSlip.css';\nimport API from '../utils/API';\nimport BetSlip from './BetSlip';\nimport Button from './Button';\nimport BetSlipConfirm from './BetSlipConfirm'\n\nconst RenderBetSlips = (props) => {\n  const [toLose, setToLose] = useState(undefined);\n  const [toWin, setToWin] = useState();\n  let newSlips = props.data;\n  console.log()\n  const slipSend = [];\n  const [submitSlips, setSubmitSlips] = useState([]);\n  const [slipList, setSlipList] = useState([]);\n  const [submittedSlips, setSubmittedSlips] = useState([])\n  const [isSubmitted, setIsSubmitted] = useState(false)\n  let send = true;\n\n  const handleDelete = (e) => {\n    console.log(e);\n    console.log(e.target.id)\n    console.log(slipList)\n    let newList = slipList.filter((slip, id) => id != e.target.id);\n    console.log(newList)\n    setSlipList(newList);\n    newSlips = {};\n  }\n\n  const handleClear = () => {\n    newSlips = {};\n    setSlipList([]);\n\n  }\n\n  const updateSlip = (id, attributes) => {\n    let index = slipList.findIndex(x => x.id == id);\n    let updateList = slipList.slice()\n    console.log(index);\n    if (index == -1) {\n\n    } else {\n      // setSlipList([...])\n    }\n  }\n\n  const updatePage = () => {\n    setIsSubmitted(true)\n    // props.onSubmit(slipList);\n    props.passSlipState('submitted')\n    props.passSlipData(slipList)\n    setSlipList([])\n\n    // setTimout((), 5000)\n  }\n\n  const handleChange = (e, data) => {\n    console.log(data);\n    console.log(e);\n    console.log(data.odds.toString()[0]);\n    switch (data.odds.toString()[0]) {\n      case '-':\n        console.log(data.odds)\n        let tempCalc = Math.abs(e.target.value * data.odds * .01);\n        console.log(tempCalc)\n        let finalCalc = tempCalc - e.target.value;\n        setToLose(e.target.value)\n        data.toLose = e.target.value;\n        console.log((e.target.value - finalCalc).toFixed(2))\n        setToWin((e.target.value - finalCalc).toFixed(2));\n        data.toWin=(e.target.value - finalCalc).toFixed(2);\n        console.log(data);\n        // return data;\n        let index = slipList.findIndex(x => console.log(x));\n        if (slipList.length === 1) {\n          slipList.map(slip => {\n            console.log(slip)\n          })\n        } else {\n\n        }\n        let slice = slipList.slice(0, parseInt(e.target.id));\n        console.log(slice);\n        console.log(slipList)\n        // console.log('slice', slice)\n        break;\n      default:\n        setToLose(e.target.value);\n        data.toLose = e.target.value;\n        console.log((e.target.value * data.odds * .01).toFixed(2))\n        setToWin((e.target.value * data.odds * .01).toFixed(2));\n        data.toWin = (e.target.value * data.odds * .01).toFixed(2)\n        console.log(slipList)\n        break;\n    };\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    event.persist();\n    console.log(slipList);\n    const userData = JSON.parse(localStorage.getItem('user'));\n\n    // function to post slip data based on slip type\n    const slipData = async () => {\n\n      slipList.map(slip => {\n        console.log(slip)\n        console.log(slip.slipData.toLose)\n        if (slip.slipData.toLose === '' || slip.slipData.toLose < 5) {\n\n          console.log('nope')\n          send = false;\n\n        } else {\n          slipSend.push({\n            userId: userData._id,\n            gameKey: slip.data.key,\n            betType: slip.slipData.type,\n            team: slip.slipData.team,\n            line: slip.slipData.line,\n            odds: slip.slipData.odds,\n            toLose: slip.slipData.toLose,\n            toWin: slip.slipData.toWin,\n            status: slip.slipData.status,\n            outcome: slip.slipData.outcome,\n            payout: slip.slipData.payout\n          })\n        }\n      })\n\n      if (send === true) {\n        await API.submitBetSlip(slipSend)\n          .then((res) => {\n            console.log(res);\n            if (res.status === 200) {\n              console.log('200')\n              // setIsSubmitted(true);\n              updatePage();\n              // return (\n              //   <div>\n              //     <BetSlipConfirm data={res.data} />\n              //   </div>\n              // )\n            }\n          })\n          .catch(err => {\n            console.log(err);\n          });\n      }\n\n\n\n    };\n\n    slipData();\n  };\n\n  useEffect(() => {\n    // setSlips(slips);\n    // const slips = props.data;\n    // const [slipList, setSlipList] = useState();\n    console.log('mounted')\n    console.log(newSlips)\n    if (newSlips === undefined || newSlips === {} || newSlips === null) {\n\n    } else {\n      setSlipList(slipList => [...slipList, newSlips])\n      console.log(\"added\")\n    }\n    console.log(slipList)\n    // setSlips(slips)\n\n  }, [newSlips]);\n\n  return (\n    <div className='slip'>\n      <div className='slip-title'>BET SLIP</div>\n      <div className='slip-tabs'>\n        <div className='slip-tab'>CART</div>\n        <div className='slip-tab'>PENDING</div>\n      </div>\n      {/* {(isSubmitted !== true && slipList !== undefined && slipList.length !== 0) ? */}\n      {(slipList !== undefined && slipList.length !== 0) ?\n        // (slipList === undefined || slipList.length === 0) ? '' :\n          slipList.map((slip, i) => {\n            return (\n              <div key={slip.data.key}>\n                <BetSlip data={slip} id={i} onRemove={handleDelete} onSubmit={handleSubmit} onChange={handleChange} onUpdate={updateSlip} toWin={toWin}/>\n              </div>\n            )\n          })\n        :\n        ''\n      }\n        {(slipList === undefined || slipList.length === 0 || slipList === []) ? '' :\n          <div className='slip-buttons'>\n            <Button\n              onClick={handleClear}\n              id={props.id}\n              type='button'\n              className='slip-button'\n            >\n              CANCEL\n            </Button>\n            <Button\n              onClick={handleSubmit}\n              className='slip-button'\n              id='submit-slip'\n            >\n              PLACE BET(S)\n            </Button>\n          </div>\n        }\n      {/* } */}\n    </div>\n  )\n};\n\nexport default RenderBetSlips;\n\n// take the value from the slip, set it to the array here, then re render the whole page using useffect dependency"]},"metadata":{},"sourceType":"module"}