{"ast":null,"code":"import _slicedToArray from \"/Users/keenanheller/Desktop/bootcamp-homeworks/sportsbook/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/keenanheller/Desktop/bootcamp-homeworks/sportsbook/client/src/components/ActiveLines.js\";\n\nimport React, { useEffect, useState, useContext } from 'react';\nimport { GamesContext } from './ActiveGames';\nimport RenderLines from './RenderLines';\nexport var ActiveLinesContext = React.createContext();\n\nvar moment = require('moment-timezone');\n\nvar ActiveLines = function ActiveLines() {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      lines = _useState2[0],\n      setLines = _useState2[1];\n\n  var _useState3 = useState(true),\n      _useState4 = _slicedToArray(_useState3, 2),\n      isLoading = _useState4[0],\n      setIsLoading = _useState4[1];\n\n  var games = useContext(GamesContext);\n  useEffect(function () {\n    setLines(gameInfo(games));\n    setIsLoading(false); // console.log(games);\n  }, []);\n\n  var formatDate = function formatDate(seconds) {\n    var gmtDate = new Date(seconds * 1000);\n    var myTimeZone = 'America/Toronto';\n    var myDateTimeFormat = 'MMMM Do YYYY h:mm a z';\n    var formattedDateTime = moment(gmtDate).tz(myTimeZone).format(myDateTimeFormat).split('2020 ');\n    var formattedDate = formattedDateTime[0];\n    var formattedTime = formattedDateTime[1];\n    return [formattedDate, formattedTime];\n  };\n\n  var gameInfo = function gameInfo(gameData) {\n    var gameInfoArray = [];\n    var i; // console.log(gameData);\n    // console.log(gameData.games.length)\n\n    for (i = 0; i < gameData.moneyline.length - 3; i++) {\n      var formattedDate = formatDate(gameData.moneyline[i].commence_time);\n      var awayMoneyLine = gameData.moneyline[i].sites[0].odds.h2h[0];\n      var homeMoneyLine = gameData.moneyline[i].sites[0].odds.h2h[1];\n      var awaySpread = gameData.spread[i].sites[0].odds.spreads.points[0];\n      var homeSpread = gameData.spread[i].sites[0].odds.spreads.points[1];\n      var awaySpreadOdds = gameData.spread[i].sites[0].odds.spreads.odds[0];\n      var homeSpreadOdds = gameData.spread[i].sites[0].odds.spreads.odds[1];\n      var overUnder = gameData.total[i].sites[0].odds.totals.points[0];\n      var overOdds = gameData.total[i].sites[0].odds.totals.odds[0];\n      var underOdds = gameData.total[i].sites[0].odds.totals.odds[1]; // console.log(gameData.total[i].sites[0]);\n\n      if (!awayMoneyLine || !homeMoneyLine || !awaySpread || !homeSpread || !awaySpreadOdds || !homeSpreadOdds || !overUnder || !overOdds || !underOdds) {\n        console.log('nope');\n      } else {\n        gameInfoArray.push({\n          key: \"\".concat(gameData.moneyline[i].home_team, \"-\").concat(gameData.moneyline[i].commence_time),\n          league: gameData.moneyline[i].sport_nice,\n          awayTeam: gameData.moneyline[i].teams[0],\n          homeTeam: gameData.moneyline[i].teams[1],\n          awayMoneyLine: gameData.moneyline[i].sites[0].odds.h2h[0],\n          homeMoneyLine: gameData.moneyline[i].sites[0].odds.h2h[1],\n          awaySpread: gameData.spread[i].sites[0].odds.spreads.points[0],\n          homeSpread: gameData.spread[i].sites[0].odds.spreads.points[1],\n          awaySpreadOdds: gameData.spread[i].sites[0].odds.spreads.odds[0],\n          homeSpreadOdds: gameData.spread[i].sites[0].odds.spreads.odds[1],\n          overUnder: gameData.total[i].sites[0].odds.totals.points[0],\n          overOdds: gameData.total[i].sites[0].odds.totals.odds[0],\n          underOdds: gameData.total[i].sites[0].odds.totals.odds[1],\n          lastUpdated: gameData.moneyline[i].sites[0].last_update,\n          siteRetrieved: gameData.moneyline[i].sites[0].site_key,\n          gameDate: formattedDate[0],\n          gameTimeEst: formattedDate[1]\n        });\n      }\n    }\n\n    ; // console.log(gameInfoArray);\n\n    return gameInfoArray;\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 5\n    }\n  }, isLoading ? '' : /*#__PURE__*/React.createElement(ActiveLinesContext.Provider, {\n    value: lines,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(RenderLines, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 11\n    }\n  })));\n};\n\nexport default ActiveLines;","map":{"version":3,"sources":["/Users/keenanheller/Desktop/bootcamp-homeworks/sportsbook/client/src/components/ActiveLines.js"],"names":["React","useEffect","useState","useContext","GamesContext","RenderLines","ActiveLinesContext","createContext","moment","require","ActiveLines","lines","setLines","isLoading","setIsLoading","games","gameInfo","formatDate","seconds","gmtDate","Date","myTimeZone","myDateTimeFormat","formattedDateTime","tz","format","split","formattedDate","formattedTime","gameData","gameInfoArray","i","moneyline","length","commence_time","awayMoneyLine","sites","odds","h2h","homeMoneyLine","awaySpread","spread","spreads","points","homeSpread","awaySpreadOdds","homeSpreadOdds","overUnder","total","totals","overOdds","underOdds","console","log","push","key","home_team","league","sport_nice","awayTeam","teams","homeTeam","lastUpdated","last_update","siteRetrieved","site_key","gameDate","gameTimeEst"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useContext } from 'react';\nimport { GamesContext } from './ActiveGames';\nimport RenderLines from './RenderLines';\nexport const ActiveLinesContext = React.createContext();\nconst moment = require('moment-timezone');\n\nconst ActiveLines = () => {\n  const [lines, setLines] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const games = useContext(GamesContext);\n  \n  useEffect(() => {\n    setLines(gameInfo(games));\n    setIsLoading(false);\n    // console.log(games);\n  }, []);\n\n  const formatDate = (seconds) => {\n    const gmtDate = new Date(seconds * 1000);\n    const myTimeZone = 'America/Toronto';\n    const myDateTimeFormat = 'MMMM Do YYYY h:mm a z';\n    const formattedDateTime = moment(gmtDate).tz(myTimeZone).format(myDateTimeFormat).split('2020 ');\n    const formattedDate = formattedDateTime[0];\n    const formattedTime = formattedDateTime[1];\n    return [formattedDate, formattedTime];\n  };\n\n  const gameInfo = (gameData) => {\n    const gameInfoArray = [];\n    let i;\n    // console.log(gameData);\n    // console.log(gameData.games.length)\n\n    for (i = 0; i < gameData.moneyline.length - 3; i++) {\n      const formattedDate = formatDate(gameData.moneyline[i].commence_time);\n      const awayMoneyLine = gameData.moneyline[i].sites[0].odds.h2h[0];\n      const homeMoneyLine = gameData.moneyline[i].sites[0].odds.h2h[1];\n      const awaySpread = gameData.spread[i].sites[0].odds.spreads.points[0];\n      const homeSpread = gameData.spread[i].sites[0].odds.spreads.points[1];\n      const awaySpreadOdds = gameData.spread[i].sites[0].odds.spreads.odds[0];\n      const homeSpreadOdds = gameData.spread[i].sites[0].odds.spreads.odds[1];\n      const overUnder = gameData.total[i].sites[0].odds.totals.points[0];\n      const overOdds = gameData.total[i].sites[0].odds.totals.odds[0];\n      const underOdds = gameData.total[i].sites[0].odds.totals.odds[1];\n    // console.log(gameData.total[i].sites[0]);\n      if (!awayMoneyLine || !homeMoneyLine || !awaySpread || !homeSpread || !awaySpreadOdds || !homeSpreadOdds || !overUnder || !overOdds || !underOdds ) {\n        console.log('nope');\n      } else {\n        gameInfoArray.push({\n          key: `${ gameData.moneyline[i].home_team }-${ gameData.moneyline[i].commence_time }`,\n          league: gameData.moneyline[i].sport_nice,\n          awayTeam: gameData.moneyline[i].teams[0],\n          homeTeam: gameData.moneyline[i].teams[1],\n          awayMoneyLine: gameData.moneyline[i].sites[0].odds.h2h[0],\n          homeMoneyLine: gameData.moneyline[i].sites[0].odds.h2h[1],\n          awaySpread: gameData.spread[i].sites[0].odds.spreads.points[0],\n          homeSpread: gameData.spread[i].sites[0].odds.spreads.points[1],\n          awaySpreadOdds: gameData.spread[i].sites[0].odds.spreads.odds[0],\n          homeSpreadOdds: gameData.spread[i].sites[0].odds.spreads.odds[1],\n          overUnder: gameData.total[i].sites[0].odds.totals.points[0],\n          overOdds: gameData.total[i].sites[0].odds.totals.odds[0],\n          underOdds: gameData.total[i].sites[0].odds.totals.odds[1],\n          lastUpdated: gameData.moneyline[i].sites[0].last_update,\n          siteRetrieved: gameData.moneyline[i].sites[0].site_key,\n          gameDate: formattedDate[0],\n          gameTimeEst: formattedDate[1]\n        });  \n      }\n    };\n\n    // console.log(gameInfoArray);\n    return gameInfoArray;\n  };\n\n  return (\n    <div>\n      {isLoading ? '' : \n        <ActiveLinesContext.Provider value={lines}>\n          <RenderLines />\n        </ActiveLinesContext.Provider>\n      }\n    </div>\n  );\n};\n\nexport default ActiveLines;\n"]},"metadata":{},"sourceType":"module"}