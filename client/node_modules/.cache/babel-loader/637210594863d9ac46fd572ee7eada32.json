{"ast":null,"code":"import axios from 'axios';\nexport default {\n  //call to get active sports to call for \"getLines\"\n  getSports: function getSports() {\n    return axios.get(\"https://api.the-odds-api.com/v3/sports?apiKey=\".concat(process.env.REACT_APP_API_KEY));\n  },\n  // call to get different api lines depending on sports and linetype\n  getLines: function getLines(sport, lineType) {\n    switch (lineType) {\n      case 'moneyline':\n        return axios.get(\"https://api.the-odds-api.com/v3/odds?&apiKey=\".concat(process.env.REACT_APP_API_KEY, \"&sport=\").concat(sport, \"&region=us&mkt=h2h&oddsFormat=american\"));\n\n      case 'spread':\n        return axios.get(\"https://api.the-odds-api.com/v3/odds?&apiKey=\".concat(process.env.REACT_APP_API_KEY, \"&sport=\").concat(sport, \"&region=us&mkt=spreads&oddsFormat=american\"));\n\n      case 'totals':\n        return axios.get(\"https://api.the-odds-api.com/v3/odds?&apiKey=\".concat(process.env.REACT_APP_API_KEY, \"&sport=\").concat(sport, \"&region=us&mkt=totals&oddsFormat=american\"));\n\n      default:\n        return axios.get(\"https://api.the-odds-api.com/v3/odds?&apiKey=\".concat(process.env.REACT_APP_API_KEY, \"&sport=\").concat(sport, \"&region=us&mkt=h2h&oddsFormat=american\"));\n    }\n  },\n  // submits a bet\n  submitBetSlip: function submitBetSlip(betInfo) {\n    // console.log(betInfos);\n    // if (betInfos.length === 1) {\n    //   console.log(betInfos.length)\n    //   betInfos.map(betInfo => {\n    //     return axios.post('/api/bet', {\n    //       betInfo\n    //     }); \n    //   })\n    return axios.post('/api/bet', {\n      betInfo\n    }); // } else {  \n    //   return axios.post('/api/bet/bulk', {\n    //     betInfos\n    //   });\n    // }\n  },\n  // gets bets per user\n  getBets: function getBets(userId) {\n    return axios.get('/api/bet', {\n      userId\n    });\n  },\n  // getUserBets: (userId) => {\n  //   return axios.get('/api/bet', {\n  //     userId\n  //   });\n  // },\n  // post for a new user\n  signup: function signup(userData) {\n    return axios.post('/signup', userData);\n  },\n  // posts for logging in\n  login: function login(username, password) {\n    return axios.post('/login', {\n      username,\n      password\n    }).then(function (response) {\n      if (response.data.token) {\n        console.log(response.data);\n        localStorage.setItem('user', JSON.stringify(response.data.user)); // define what is passed back\n      }\n\n      return response;\n    }).catch(function (err) {\n      console.log(err);\n    });\n  },\n  // checks if user is logged in\n  isLoggedIn: function isLoggedIn() {\n    if (localStorage.getItem('user') === null) {\n      return false;\n    }\n\n    return true;\n  },\n  // logs user out\n  logout: function logout() {\n    localStorage.removeItem('user');\n  }\n};","map":{"version":3,"sources":["/Users/keenanheller/Desktop/bootcamp-homeworks/sportsbook/client/src/utils/API.js"],"names":["axios","getSports","get","process","env","REACT_APP_API_KEY","getLines","sport","lineType","submitBetSlip","betInfo","post","getBets","userId","signup","userData","login","username","password","then","response","data","token","console","log","localStorage","setItem","JSON","stringify","user","catch","err","isLoggedIn","getItem","logout","removeItem"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,eAAe;AACb;AACAC,EAAAA,SAAS,EAAE,qBAAM;AACf,WAAOD,KAAK,CAACE,GAAN,yDAA4DC,OAAO,CAACC,GAAR,CAAYC,iBAAxE,EAAP;AACD,GAJY;AAMb;AACAC,EAAAA,QAAQ,EAAE,kBAACC,KAAD,EAAQC,QAAR,EAAqB;AAC7B,YAAOA,QAAP;AACE,WAAK,WAAL;AACE,eAAOR,KAAK,CAACE,GAAN,wDAA2DC,OAAO,CAACC,GAAR,CAAYC,iBAAvE,oBAAoGE,KAApG,4CAAP;;AACF,WAAK,QAAL;AACE,eAAOP,KAAK,CAACE,GAAN,wDAA2DC,OAAO,CAACC,GAAR,CAAYC,iBAAvE,oBAAoGE,KAApG,gDAAP;;AACF,WAAK,QAAL;AACE,eAAOP,KAAK,CAACE,GAAN,wDAA2DC,OAAO,CAACC,GAAR,CAAYC,iBAAvE,oBAAoGE,KAApG,+CAAP;;AACF;AACE,eAAOP,KAAK,CAACE,GAAN,wDAA2DC,OAAO,CAACC,GAAR,CAAYC,iBAAvE,oBAAoGE,KAApG,4CAAP;AARJ;AAUD,GAlBY;AAoBb;AACAE,EAAAA,aAAa,EAAE,uBAACC,OAAD,EAAa;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,WAAOV,KAAK,CAACW,IAAN,CAAW,UAAX,EAAuB;AAC5BD,MAAAA;AAD4B,KAAvB,CAAP,CAV0B,CAc1B;AACA;AACA;AACA;AACA;AACD,GAxCY;AA0Cb;AACAE,EAAAA,OAAO,EAAE,iBAACC,MAAD,EAAY;AACnB,WAAOb,KAAK,CAACE,GAAN,CAAU,UAAV,EAAsB;AAC3BW,MAAAA;AAD2B,KAAtB,CAAP;AAGD,GA/CY;AAiDb;AACA;AACA;AACA;AACA;AAEA;AACAC,EAAAA,MAAM,EAAE,gBAACC,QAAD,EAAc;AACpB,WAAOf,KAAK,CAACW,IAAN,CAAW,SAAX,EAAsBI,QAAtB,CAAP;AACD,GA1DY;AA4Db;AACAC,EAAAA,KAAK,EAAE,eAACC,QAAD,EAAWC,QAAX,EAAwB;AAC7B,WAAOlB,KAAK,CAACW,IAAN,CAAW,QAAX,EAAqB;AAC1BM,MAAAA,QAD0B;AAE1BC,MAAAA;AAF0B,KAArB,EAIJC,IAJI,CAIC,UAACC,QAAD,EAAc;AAClB,UAAIA,QAAQ,CAACC,IAAT,CAAcC,KAAlB,EAAyB;AACvBC,QAAAA,OAAO,CAACC,GAAR,CAAYJ,QAAQ,CAACC,IAArB;AACAI,QAAAA,YAAY,CAACC,OAAb,CAAqB,MAArB,EAA6BC,IAAI,CAACC,SAAL,CAAeR,QAAQ,CAACC,IAAT,CAAcQ,IAA7B,CAA7B,EAFuB,CAE2C;AACnE;;AACD,aAAOT,QAAP;AACD,KAVI,EAWJU,KAXI,CAWE,UAAAC,GAAG,EAAI;AACZR,MAAAA,OAAO,CAACC,GAAR,CAAYO,GAAZ;AACD,KAbI,CAAP;AAcD,GA5EY;AA8Eb;AACAC,EAAAA,UAAU,EAAE,sBAAM;AAChB,QAAIP,YAAY,CAACQ,OAAb,CAAqB,MAArB,MAAiC,IAArC,EAA2C;AACzC,aAAO,KAAP;AACD;;AACD,WAAO,IAAP;AACD,GApFY;AAsFb;AACAC,EAAAA,MAAM,EAAE,kBAAM;AACZT,IAAAA,YAAY,CAACU,UAAb,CAAwB,MAAxB;AACD;AAzFY,CAAf","sourcesContent":["import axios from 'axios';\n\nexport default {\n  //call to get active sports to call for \"getLines\"\n  getSports: () => {\n    return axios.get(`https://api.the-odds-api.com/v3/sports?apiKey=${ process.env.REACT_APP_API_KEY }`);\n  },\n\n  // call to get different api lines depending on sports and linetype\n  getLines: (sport, lineType) => {\n    switch(lineType) {\n      case 'moneyline':\n        return axios.get(`https://api.the-odds-api.com/v3/odds?&apiKey=${ process.env.REACT_APP_API_KEY }&sport=${ sport }&region=us&mkt=h2h&oddsFormat=american`);\n      case 'spread':\n        return axios.get(`https://api.the-odds-api.com/v3/odds?&apiKey=${ process.env.REACT_APP_API_KEY }&sport=${ sport }&region=us&mkt=spreads&oddsFormat=american`);\n      case 'totals':\n        return axios.get(`https://api.the-odds-api.com/v3/odds?&apiKey=${ process.env.REACT_APP_API_KEY }&sport=${ sport }&region=us&mkt=totals&oddsFormat=american`);\n      default:\n        return axios.get(`https://api.the-odds-api.com/v3/odds?&apiKey=${ process.env.REACT_APP_API_KEY }&sport=${ sport }&region=us&mkt=h2h&oddsFormat=american`);\n      }\n  },\n\n  // submits a bet\n  submitBetSlip: (betInfo) => {\n    // console.log(betInfos);\n    // if (betInfos.length === 1) {\n    //   console.log(betInfos.length)\n    //   betInfos.map(betInfo => {\n    //     return axios.post('/api/bet', {\n    //       betInfo\n    //     }); \n    //   })\n      \n    return axios.post('/api/bet', {\n      betInfo\n    }); \n    \n    // } else {  \n    //   return axios.post('/api/bet/bulk', {\n    //     betInfos\n    //   });\n    // }\n  },\n\n  // gets bets per user\n  getBets: (userId) => {\n    return axios.get('/api/bet', {\n      userId\n    });\n  },\n\n  // getUserBets: (userId) => {\n  //   return axios.get('/api/bet', {\n  //     userId\n  //   });\n  // },\n\n  // post for a new user\n  signup: (userData) => {\n    return axios.post('/signup', userData);\n  },\n\n  // posts for logging in\n  login: (username, password) => {\n    return axios.post('/login', {\n      username,\n      password\n    })\n      .then((response) => {\n        if (response.data.token) {\n          console.log(response.data)\n          localStorage.setItem('user', JSON.stringify(response.data.user)); // define what is passed back\n        }\n        return response;\n      })\n      .catch(err => {\n        console.log(err);\n      });\n  },\n\n  // checks if user is logged in\n  isLoggedIn: () => {\n    if (localStorage.getItem('user') === null) {\n      return false;\n    }\n    return true;\n  },\n\n  // logs user out\n  logout: () => {\n    localStorage.removeItem('user');\n  }\n};\n"]},"metadata":{},"sourceType":"module"}