{"ast":null,"code":"import _objectSpread from \"/Users/keenanheller/Desktop/bootcamp-homeworks/sportsbook/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _regeneratorRuntime from \"/Users/keenanheller/Desktop/bootcamp-homeworks/sportsbook/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/keenanheller/Desktop/bootcamp-homeworks/sportsbook/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/Users/keenanheller/Desktop/bootcamp-homeworks/sportsbook/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/keenanheller/Desktop/bootcamp-homeworks/sportsbook/client/src/components/ActiveGames.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, useContext } from 'react';\nimport API from '../utils/API';\nimport ActiveLines from './ActiveLines';\nimport Nav from './Nav';\nimport { SportsContext } from './ActiveSports';\nexport var GamesContext = /*#__PURE__*/React.createContext();\nimport RenderLines from './RenderLines';\n\nvar moment = require('moment-timezone');\n\nvar ActiveGames = function ActiveGames(props) {\n  _s();\n\n  var _useState = useState({\n    moneyline: null,\n    spread: null,\n    total: null\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      games = _useState2[0],\n      setGames = _useState2[1];\n\n  var _useState3 = useState(true),\n      _useState4 = _slicedToArray(_useState3, 2),\n      isLoading = _useState4[0],\n      setIsLoading = _useState4[1];\n\n  var _useState5 = useState([]),\n      _useState6 = _slicedToArray(_useState5, 2),\n      lines = _useState6[0],\n      setLines = _useState6[1]; // const sports = useContext(SportsContext);\n\n\n  console.log(isLoading);\n  console.log(props);\n  console.log(props.data.loading); // const formatDate = (seconds) => {\n  //   const gmtDate = new Date(seconds * 1000);\n  //   const myTimeZone = 'America/Toronto';\n  //   const myDateTimeFormat = 'MM/DD YYYY h:mm a z';\n  //   const formattedDateTime = moment(gmtDate).tz(myTimeZone).format(myDateTimeFormat).split('2020 ');\n  //   const formattedDate = formattedDateTime[0];\n  //   const formattedTime = formattedDateTime[1];\n  //   return [formattedDate, formattedTime];\n  // };\n\n  var gameInfo = function gameInfo(gameData) {\n    var gameInfoArray = [];\n    console.log('inside game info');\n\n    var formatDate = function formatDate(seconds) {\n      var gmtDate = new Date(seconds * 1000);\n      var myTimeZone = 'America/Toronto';\n      var myDateTimeFormat = 'MM/DD YYYY h:mm a z';\n      var formattedDateTime = moment(gmtDate).tz(myTimeZone).format(myDateTimeFormat).split('2020 ');\n      var formattedDate = formattedDateTime[0];\n      var formattedTime = formattedDateTime[1];\n      return [formattedDate, formattedTime];\n    }; // function to push all lines data to an array\n\n\n    for (var i = 0; i < gameData.moneyline.length; i++) {\n      var formattedDate = formatDate(gameData.moneyline[i].commence_time);\n      var moneyLineData = gameData.moneyline[i];\n      var spreadData = gameData.spread[i];\n      var totalsData = gameData.total[i];\n      console.log('inside game data');\n\n      if (!moneyLineData.sites[0] || !spreadData.sites[0] || !totalsData.sites[0]) {} else {\n        gameInfoArray.push({\n          key: \"\".concat(gameData.moneyline[i].home_team, \"-\").concat(gameData.moneyline[i].commence_time),\n          league: gameData.moneyline[i].sport_nice,\n          awayTeam: gameData.moneyline[i].teams[0],\n          homeTeam: gameData.moneyline[i].teams[1],\n          awayMoneyLine: gameData.moneyline[i].sites[0].odds.h2h[0],\n          homeMoneyLine: gameData.moneyline[i].sites[0].odds.h2h[1],\n          awaySpread: gameData.spread[i].sites[0].odds.spreads.points[0],\n          homeSpread: gameData.spread[i].sites[0].odds.spreads.points[1],\n          awaySpreadOdds: gameData.spread[i].sites[0].odds.spreads.odds[0],\n          homeSpreadOdds: gameData.spread[i].sites[0].odds.spreads.odds[1],\n          overUnder: gameData.total[i].sites[0].odds.totals.points[0],\n          overOdds: gameData.total[i].sites[0].odds.totals.odds[0],\n          underOdds: gameData.total[i].sites[0].odds.totals.odds[1],\n          lastUpdated: gameData.moneyline[i].sites[0].last_update,\n          siteRetrieved: gameData.moneyline[i].sites[0].site_key,\n          gameDate: formattedDate[0],\n          gameTimeEst: formattedDate[1]\n        });\n      }\n    }\n\n    ;\n    console.log(gameInfoArray);\n    return gameInfoArray;\n  };\n\n  useEffect(function () {\n    // console.log(props);\n    // gets moneyline data\n    console.log('useeffect');\n\n    var getMoneyLineData = /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var response;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                console.log('ue1');\n                _context.next = 3;\n                return API.getLines(props.data.sport, 'moneyline');\n\n              case 3:\n                response = _context.sent;\n                return _context.abrupt(\"return\", response.data.data);\n\n              case 5:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function getMoneyLineData() {\n        return _ref.apply(this, arguments);\n      };\n    }(); // gets spread data\n\n\n    var getSpreadData = /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        var response;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                console.log('ue2');\n                _context2.next = 3;\n                return API.getLines(props.data.sport, 'spread');\n\n              case 3:\n                response = _context2.sent;\n                return _context2.abrupt(\"return\", response.data.data);\n\n              case 5:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      return function getSpreadData() {\n        return _ref2.apply(this, arguments);\n      };\n    }(); // gets totals data\n\n\n    var getTotalsData = /*#__PURE__*/function () {\n      var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n        var response;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                console.log('ue3');\n                _context3.next = 3;\n                return API.getLines(props.data.sport, 'totals');\n\n              case 3:\n                response = _context3.sent;\n                return _context3.abrupt(\"return\", response.data.data);\n\n              case 5:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }));\n\n      return function getTotalsData() {\n        return _ref3.apply(this, arguments);\n      };\n    }();\n\n    console.log('oo'); // promise all for all functions to run\n    // const example = getMoneyLineData();\n    // console.log(example)\n\n    Promise.all([getMoneyLineData(), getSpreadData(), getTotalsData()]).then(function (values) {\n      console.log('ue4'); // setGames({\n      //   ...games,\n      //   moneyline: values[0],\n      //   spread: values[1],\n      //   total: values[2],\n      // })\n\n      console.log('hey');\n      var examp = gameInfo(_objectSpread(_objectSpread({}, games), {}, {\n        moneyline: values[0],\n        spread: values[1],\n        total: values[2]\n      }));\n      console.log(examp); // setLines(gameInfo({\n      //   ...games,\n      //   moneyline: values[0],\n      //   spread: values[1],\n      //   total: values[2],\n      // }))\n\n      setLines(examp);\n      console.log('hey there');\n      console.log(values);\n      setIsLoading(false);\n    }).catch(function (err) {\n      console.log(err);\n      setIsLoading(false);\n    });\n  }, [props.data]); // props\n  // console.log(lines);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"test2\",\n    children: props.data.loading ? '' : /*#__PURE__*/_jsxDEV(RenderLines, {\n      data: lines,\n      passClickData: props.passClickData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 9\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 148,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(ActiveGames, \"5yu6y+s2rTeDEBmuR3vVGlqvRDM=\");\n\n_c = ActiveGames;\nexport default ActiveGames;\n\nvar _c;\n\n$RefreshReg$(_c, \"ActiveGames\");","map":{"version":3,"sources":["/Users/keenanheller/Desktop/bootcamp-homeworks/sportsbook/client/src/components/ActiveGames.js"],"names":["React","useEffect","useState","useContext","API","ActiveLines","Nav","SportsContext","GamesContext","createContext","RenderLines","moment","require","ActiveGames","props","moneyline","spread","total","games","setGames","isLoading","setIsLoading","lines","setLines","console","log","data","loading","gameInfo","gameData","gameInfoArray","formatDate","seconds","gmtDate","Date","myTimeZone","myDateTimeFormat","formattedDateTime","tz","format","split","formattedDate","formattedTime","i","length","commence_time","moneyLineData","spreadData","totalsData","sites","push","key","home_team","league","sport_nice","awayTeam","teams","homeTeam","awayMoneyLine","odds","h2h","homeMoneyLine","awaySpread","spreads","points","homeSpread","awaySpreadOdds","homeSpreadOdds","overUnder","totals","overOdds","underOdds","lastUpdated","last_update","siteRetrieved","site_key","gameDate","gameTimeEst","getMoneyLineData","getLines","sport","response","getSpreadData","getTotalsData","Promise","all","then","values","examp","catch","err","passClickData"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useContext } from 'react';\nimport API from '../utils/API';\nimport ActiveLines from './ActiveLines';\nimport Nav from './Nav';\nimport { SportsContext } from './ActiveSports';\nexport const GamesContext = React.createContext();\nimport RenderLines from './RenderLines';\nconst moment = require('moment-timezone');\n\n\nconst ActiveGames = (props) => {\n  const [games, setGames] = useState({ moneyline: null, spread: null, total: null });\n  const [isLoading, setIsLoading] = useState(true);\n  const [lines, setLines] = useState([])\n  // const sports = useContext(SportsContext);\n  console.log(isLoading)\n  console.log(props);\n  console.log(props.data.loading)\n\n  // const formatDate = (seconds) => {\n  //   const gmtDate = new Date(seconds * 1000);\n  //   const myTimeZone = 'America/Toronto';\n  //   const myDateTimeFormat = 'MM/DD YYYY h:mm a z';\n  //   const formattedDateTime = moment(gmtDate).tz(myTimeZone).format(myDateTimeFormat).split('2020 ');\n  //   const formattedDate = formattedDateTime[0];\n  //   const formattedTime = formattedDateTime[1];\n  //   return [formattedDate, formattedTime];\n  // };\n\n  const gameInfo = (gameData) => {\n    const gameInfoArray = [];\n    console.log('inside game info')\n\n    const formatDate = (seconds) => {\n      const gmtDate = new Date(seconds * 1000);\n      const myTimeZone = 'America/Toronto';\n      const myDateTimeFormat = 'MM/DD YYYY h:mm a z';\n      const formattedDateTime = moment(gmtDate).tz(myTimeZone).format(myDateTimeFormat).split('2020 ');\n      const formattedDate = formattedDateTime[0];\n      const formattedTime = formattedDateTime[1];\n      return [formattedDate, formattedTime];\n    };\n  \n    // function to push all lines data to an array\n    for (let i = 0; i < gameData.moneyline.length; i++) {\n      const formattedDate = formatDate(gameData.moneyline[i].commence_time);\n      const moneyLineData = gameData.moneyline[i];\n      const spreadData = gameData.spread[i];\n      const totalsData = gameData.total[i];\n\n      console.log('inside game data')\n      if (!moneyLineData.sites[0] || !spreadData.sites[0] || !totalsData.sites[0]) {\n      } else {\n        gameInfoArray.push({\n          key: `${ gameData.moneyline[i].home_team }-${ gameData.moneyline[i].commence_time }`,\n          league: gameData.moneyline[i].sport_nice,\n          awayTeam: gameData.moneyline[i].teams[0],\n          homeTeam: gameData.moneyline[i].teams[1],\n          awayMoneyLine: gameData.moneyline[i].sites[0].odds.h2h[0],\n          homeMoneyLine: gameData.moneyline[i].sites[0].odds.h2h[1],\n          awaySpread: gameData.spread[i].sites[0].odds.spreads.points[0],\n          homeSpread: gameData.spread[i].sites[0].odds.spreads.points[1],\n          awaySpreadOdds: gameData.spread[i].sites[0].odds.spreads.odds[0],\n          homeSpreadOdds: gameData.spread[i].sites[0].odds.spreads.odds[1],\n          overUnder: gameData.total[i].sites[0].odds.totals.points[0],\n          overOdds: gameData.total[i].sites[0].odds.totals.odds[0],\n          underOdds: gameData.total[i].sites[0].odds.totals.odds[1],\n          lastUpdated: gameData.moneyline[i].sites[0].last_update,\n          siteRetrieved: gameData.moneyline[i].sites[0].site_key,\n          gameDate: formattedDate[0],\n          gameTimeEst: formattedDate[1]\n        });\n      }\n    };\n    console.log(gameInfoArray)\n    return gameInfoArray;\n  };\n\n\n\n  useEffect(() => {\n    // console.log(props);\n    // gets moneyline data\n    console.log('useeffect')\n    const getMoneyLineData = async () => {\n      console.log('ue1')\n      const response = await API.getLines(props.data.sport, 'moneyline');\n      return response.data.data;\n    };\n    \n    // gets spread data\n    const getSpreadData = async () => {\n      console.log('ue2')\n      const response = await API.getLines(props.data.sport, 'spread');\n      return response.data.data;\n    };\n\n    // gets totals data\n    const getTotalsData = async () => {\n      console.log('ue3')\n      const response = await API.getLines(props.data.sport, 'totals');\n      return response.data.data;\n    };\n\n    console.log('oo')\n    // promise all for all functions to run\n    // const example = getMoneyLineData();\n    // console.log(example)\n    Promise.all([getMoneyLineData(), getSpreadData(), getTotalsData()])\n      \n      .then(values => {\n        console.log('ue4')\n        // setGames({\n        //   ...games,\n        //   moneyline: values[0],\n        //   spread: values[1],\n        //   total: values[2],\n        // })\n        console.log('hey')\n        const examp = gameInfo({\n          ...games,\n          moneyline: values[0],\n          spread: values[1],\n          total: values[2],\n        })\n        console.log(examp)\n        // setLines(gameInfo({\n        //   ...games,\n        //   moneyline: values[0],\n        //   spread: values[1],\n        //   total: values[2],\n        // }))\n        setLines(examp)\n        console.log('hey there')\n        console.log(values);\n        setIsLoading(false)\n      })\n      .catch(err => {\n        console.log(err);\n        setIsLoading(false)\n      });\n\n\n  }, [props.data]); // props\n\n  // console.log(lines);\n  return (\n    <div className='test2'>\n     {(props.data.loading) ? '' :\n        <RenderLines data={lines} passClickData={props.passClickData}/>\n  }\n    </div>\n  );\n};\n\nexport default ActiveGames;\n"]},"metadata":{},"sourceType":"module"}