{"ast":null,"code":"import _regeneratorRuntime from \"/Users/keenanheller/Desktop/bootcamp-homeworks/sportsbook/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _objectSpread from \"/Users/keenanheller/Desktop/bootcamp-homeworks/sportsbook/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _asyncToGenerator from \"/Users/keenanheller/Desktop/bootcamp-homeworks/sportsbook/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/Users/keenanheller/Desktop/bootcamp-homeworks/sportsbook/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/keenanheller/Desktop/bootcamp-homeworks/sportsbook/client/src/components/ActiveGames.js\";\n\nimport React, { useEffect, useState, useContext } from 'react';\nimport API from '../utils/API';\nimport ActiveLines from './ActiveLines';\nimport { SportsContext } from './ActiveSports';\nexport var GamesContext = React.createContext();\n\nvar ActiveGames = function ActiveGames() {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      games = _useState2[0],\n      setGames = _useState2[1];\n\n  var sports = useContext(SportsContext);\n  useEffect(function () {\n    function getMoneyLine() {\n      return _getMoneyLine.apply(this, arguments);\n    }\n\n    function _getMoneyLine() {\n      _getMoneyLine = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return API.getLines(sports[1], 'moneyline').then(function (res) {\n                  // console.log(res.data.data)\n                  // console.log(res.data.data[0].sites[6].odds.h2h[0]);\n                  // setGames(res.data.data);\n                  setGames(_objectSpread({}, games, {\n                    games: _objectSpread({}, games, {\n                      moneyline: res.data.data\n                    }) // moneyline: res.data.data\n\n                  }));\n                }).catch(function (err) {\n                  console.log(err);\n                });\n\n              case 2:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n      return _getMoneyLine.apply(this, arguments);\n    }\n\n    ;\n\n    function getSpreadLine() {\n      return _getSpreadLine.apply(this, arguments);\n    }\n\n    function _getSpreadLine() {\n      _getSpreadLine = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return API.getLines(sports[1], 'spread').then(function (res) {\n                  // console.log(res.data.data)\n                  // console.log(res.data.data[0].sites[6].odds.h2h[0]);\n                  // setGames(res.data.data);\n                  setGames(_objectSpread({}, games, {\n                    games: _objectSpread({}, games, {\n                      spread: res.data.data\n                    })\n                  }));\n                }).catch(function (err) {\n                  console.log(err);\n                });\n\n              case 2:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n      return _getSpreadLine.apply(this, arguments);\n    }\n\n    ; // API.getLines(sports[1], 'moneyline')\n    //   .then(res => {\n    //     // console.log(res.data.data)\n    //     // console.log(res.data.data[0].sites[6].odds.h2h[0]);\n    //     // setGames(res.data.data);\n    //     setGames({\n    //       ...games,\n    //       moneyline: res.data.data\n    //     });\n    //   })\n    //   .catch(err => {\n    //     console.log(err)\n    //   });\n\n    getMoneyLine();\n    getSpreadLine();\n    console.log(games);\n  }, [sports]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(GamesContext.Provider, {\n    value: games,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(ActiveLines, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default ActiveGames;","map":{"version":3,"sources":["/Users/keenanheller/Desktop/bootcamp-homeworks/sportsbook/client/src/components/ActiveGames.js"],"names":["React","useEffect","useState","useContext","API","ActiveLines","SportsContext","GamesContext","createContext","ActiveGames","games","setGames","sports","getMoneyLine","getLines","then","res","moneyline","data","catch","err","console","log","getSpreadLine","spread"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,UAArC,QAAuD,OAAvD;AACA,OAAOC,GAAP,MAAgB,cAAhB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,SAASC,aAAT,QAA8B,gBAA9B;AACA,OAAO,IAAMC,YAAY,GAAGP,KAAK,CAACQ,aAAN,EAArB;;AAEP,IAAMC,WAAW,GAAG,SAAdA,WAAc,GAAM;AAAA,kBACEP,QAAQ,CAAC,EAAD,CADV;AAAA;AAAA,MACjBQ,KADiB;AAAA,MACVC,QADU;;AAExB,MAAMC,MAAM,GAAGT,UAAU,CAACG,aAAD,CAAzB;AAEAL,EAAAA,SAAS,CAAC,YAAM;AAAA,aACCY,YADD;AAAA;AAAA;;AAAA;AAAA,+EACd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACQT,GAAG,CAACU,QAAJ,CAAaF,MAAM,CAAC,CAAD,CAAnB,EAAwB,WAAxB,EACLG,IADK,CACA,UAAAC,GAAG,EAAI;AACX;AACA;AACA;AACAL,kBAAAA,QAAQ,mBACHD,KADG;AAENA,oBAAAA,KAAK,oBACAA,KADA;AAEHO,sBAAAA,SAAS,EAAED,GAAG,CAACE,IAAJ,CAASA;AAFjB,sBAFC,CAMN;;AANM,qBAAR;AAQD,iBAbK,EAcLC,KAdK,CAcC,UAAAC,GAAG,EAAI;AACZC,kBAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACD,iBAhBK,CADR;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADc;AAAA;AAAA;;AAmBb;;AAnBa,aAqBCG,aArBD;AAAA;AAAA;;AAAA;AAAA,gFAqBd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACQnB,GAAG,CAACU,QAAJ,CAAaF,MAAM,CAAC,CAAD,CAAnB,EAAwB,QAAxB,EACLG,IADK,CACA,UAAAC,GAAG,EAAI;AACX;AACA;AACA;AACAL,kBAAAA,QAAQ,mBACHD,KADG;AAENA,oBAAAA,KAAK,oBACAA,KADA;AAEHc,sBAAAA,MAAM,EAAER,GAAG,CAACE,IAAJ,CAASA;AAFd;AAFC,qBAAR;AAOD,iBAZK,EAaLC,KAbK,CAaC,UAAAC,GAAG,EAAI;AACZC,kBAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACD,iBAfK,CADR;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OArBc;AAAA;AAAA;;AAsCb,KAtCa,CAyCd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACAP,IAAAA,YAAY;AACZU,IAAAA,aAAa;AACbF,IAAAA,OAAO,CAACC,GAAR,CAAYZ,KAAZ;AACD,GAzDQ,EAyDN,CAACE,MAAD,CAzDM,CAAT;AA2DA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEE,oBAAC,YAAD,CAAc,QAAd;AAAuB,IAAA,KAAK,EAAEF,KAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAFF,CADF;AAQD,CAvED;;AAyEA,eAAeD,WAAf","sourcesContent":["import React, { useEffect, useState, useContext } from 'react';\nimport API from '../utils/API';\nimport ActiveLines from './ActiveLines';\nimport { SportsContext } from './ActiveSports';\nexport const GamesContext = React.createContext();\n\nconst ActiveGames = () => {\n  const [games, setGames] = useState([]);\n  const sports = useContext(SportsContext);\n\n  useEffect(() => {\n    async function getMoneyLine() {\n      await API.getLines(sports[1], 'moneyline')\n      .then(res => {\n        // console.log(res.data.data)\n        // console.log(res.data.data[0].sites[6].odds.h2h[0]);\n        // setGames(res.data.data);\n        setGames({\n          ...games,\n          games: {\n            ...games,\n            moneyline: res.data.data\n          },\n          // moneyline: res.data.data\n        });\n      })\n      .catch(err => {\n        console.log(err)\n      });\n    };\n\n    async function getSpreadLine() {\n      await API.getLines(sports[1], 'spread')\n      .then(res => {\n        // console.log(res.data.data)\n        // console.log(res.data.data[0].sites[6].odds.h2h[0]);\n        // setGames(res.data.data);\n        setGames({\n          ...games,\n          games: {\n            ...games,\n            spread: res.data.data\n          },\n        });\n      })\n      .catch(err => {\n        console.log(err)\n      });\n    };\n\n\n    // API.getLines(sports[1], 'moneyline')\n    //   .then(res => {\n    //     // console.log(res.data.data)\n    //     // console.log(res.data.data[0].sites[6].odds.h2h[0]);\n    //     // setGames(res.data.data);\n    //     setGames({\n    //       ...games,\n    //       moneyline: res.data.data\n    //     });\n    //   })\n    //   .catch(err => {\n    //     console.log(err)\n    //   });\n    getMoneyLine();\n    getSpreadLine();\n    console.log(games);\n  }, [sports]);\n\n  return (\n    <div>\n      {/* {games.map(game => <div key={game.home_team}>{game.teams[0]} vs. {game.teams[1]}</div>)} */}\n      <GamesContext.Provider value={games}>\n        <ActiveLines />\n      </GamesContext.Provider>\n    </div>\n  );\n};\n\nexport default ActiveGames;\n"]},"metadata":{},"sourceType":"module"}