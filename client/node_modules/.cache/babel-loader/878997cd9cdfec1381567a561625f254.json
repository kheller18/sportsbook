{"ast":null,"code":"import _slicedToArray from \"/Users/keenanheller/Desktop/bootcamp-homeworks/sportsbook/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/keenanheller/Desktop/bootcamp-homeworks/sportsbook/client/src/components/RenderLines.js\";\n\nimport React, { useContext, useEffect, useState, useCallback } from 'react';\nimport { ActiveLinesContext } from './ActiveLines';\nimport '../styles/RenderLines.css';\nimport BetSlip from './BetSlip';\nimport Button from './Button';\nexport var RenderLinesContext = React.createContext();\n\nvar RenderLines = function RenderLines() {\n  // const [sportsLines, renderSportsLines] = useState\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      click = _useState2[0],\n      setClick = _useState2[1];\n\n  var _useState3 = useState({\n    data: null,\n    isLoading: true\n  }),\n      _useState4 = _slicedToArray(_useState3, 2),\n      clickData = _useState4[0],\n      setClickData = _useState4[1];\n\n  var sportsLines = useContext(ActiveLinesContext);\n  var header = ['TIME', 'TEAM', 'MONEY', 'SPREAD', 'TOTAL'];\n  console.log('hello');\n  console.log(clickData);\n\n  var handleClick = function handleClick(e, game) {\n    e.preventDefault();\n    e.persist();\n    console.log(e);\n    console.log(e.target.value);\n    setClickData({\n      data: game,\n      isLoading: false\n    });\n    console.log(clickData);\n  };\n\n  useEffect(function () {// window.addEventListener(\"click\", handleClick)\n    // if(clickData.isLoading) {\n    // } else {\n    //   console.log('hey')\n    // }\n    // console.log(sportsLines);\n    // }, [sportsLines]);\n    // console.log(clickData.isLoading)\n    // return () => window.removeEventListener(\"click\", handleClick);\n  }, [clickData]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"game-container\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"render-sport-title\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }, \"NFL\"), /*#__PURE__*/React.createElement(\"table\", {\n    className: \"table\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }\n  }, header.map(function (h, i) {\n    return /*#__PURE__*/React.createElement(\"th\", {\n      key: i,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 39\n      }\n    }, h);\n  })))), sportsLines.map(function (game) {\n    return /*#__PURE__*/React.createElement(\"table\", {\n      className: \"render-main-body\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      key: game.key,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"table\", {\n      className: \"render-sub-body\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 31\n      }\n    }, game.awayTeam), /*#__PURE__*/React.createElement(\"td\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 31\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      onClick: function onClick(e) {\n        return handleClick(e, game);\n      },\n      value: [{\n        away: game.awayTeam,\n        line: game.awayMoneyLine\n      }],\n      data: game,\n      className: \"render-moneyline\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 33\n      }\n    }, game.awayMoneyLine.toString().charAt(0) === '-' ? game.awayMoneyLine : \"+\".concat(game.awayMoneyLine))), /*#__PURE__*/React.createElement(\"td\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 31\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      onClick: function onClick(e) {\n        return handleClick(e, game);\n      },\n      value: [game.awayTeam, game.awaySpread],\n      data: {\n        data: game\n      },\n      className: \"render-spread\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 33\n      }\n    }, game.awaySpread.toString().charAt(0) === '-' ? game.awaySpread : \"+\".concat(game.awaySpread, \" (\").concat(game.awaySpreadOdds, \")\"))), /*#__PURE__*/React.createElement(\"td\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 31\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      onClick: function onClick(e) {\n        return handleClick(e, game);\n      },\n      value: [game.awayTeam, game.awaySpread],\n      data: game,\n      className: \"render-over\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 33\n      }\n    }, \"O/\", game.overUnder))))))), /*#__PURE__*/React.createElement(\"tr\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"table\", {\n      className: \"render-gametime\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 31\n      }\n    }, game.gameTimeEst)))))), /*#__PURE__*/React.createElement(\"tr\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"table\", {\n      className: \"render-sub-body\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 31\n      }\n    }, game.homeTeam), /*#__PURE__*/React.createElement(\"td\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 31\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      onClick: function onClick(e) {\n        return handleClick(e, game);\n      },\n      value: [{\n        away: game.homeTeam,\n        line: game.homeMoneyLine\n      }],\n      data: game,\n      className: \"render-moneyline\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 33\n      }\n    }, game.homeMoneyLine.toString().charAt(0) === '-' ? game.homeMoneyLine : \"+\".concat(game.homeMoneyLine))), /*#__PURE__*/React.createElement(\"td\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 31\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      onClick: function onClick(e) {\n        return handleClick(e, game);\n      },\n      value: [game.homeTeam, game.homeSpread],\n      data: {\n        data: game\n      },\n      className: \"render-spread\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 33\n      }\n    }, game.homeSpread.toString().charAt(0) === '-' ? game.homeSpread : \"+\".concat(game.homeSpread, \" (\").concat(game.homeSpreadOdds, \")\"))), /*#__PURE__*/React.createElement(\"td\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 31\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      onClick: function onClick(e) {\n        return handleClick(e, game);\n      },\n      value: [game.homeTeam, game.homeSpread],\n      data: game,\n      className: \"render-over\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 33\n      }\n    }, \"U/\", game.overUnder)))))))));\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"bet-slip\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(BetSlip, {\n    data: clickData,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 9\n    }\n  }))); // return (\n  //   <div className='container'>\n  //     <div className='game-container'>\n  //       <div className='render-sport-title'>NFL</div>\n  //       <div className='render-game-summary'>\n  //       </div>\n  //       {sportsLines.map(game => \n  //         <div className='render-games' key={game.key}>\n  //           <div className='render-game-summary'>\n  //             <div className='render-gamedate'>{game.gameDate}</div>\n  //             <div className='render-gametime'>{game.gameTimeEst}</div>\n  //           </div>\n  //           <div className='render-game'>\n  //             <div className='render-team'>{game.awayTeam}</div>\n  //             <Button \n  //               onClick={(e) => handleClick(e, game)}\n  //               value={[{\n  //                 away: game.awayTeam,\n  //                 line: game.awayMoneyLine\n  //               }]}\n  //                 // ...game\n  //                 // game.awayTeam,\n  //                 // game.awayMoneyLine\n  //               // }\n  //               data={game}\n  //               className='render-moneyline'\n  //             >\n  //               {game.awayMoneyLine.toString().charAt(0)==='-' ? game.awayMoneyLine : `+${ game.awayMoneyLine }`}\n  //             </Button>\n  //             <Button \n  //               onClick={(e) => handleClick(e)}\n  //               value={[\n  //                 game.awayTeam,\n  //                 game.awaySpread\n  //               ]}\n  //               data={{data: game}}\n  //               className='render-spread'\n  //             >\n  //               {game.awaySpread.toString().charAt(0)==='-' ? game.awaySpread  : `+${ game.awaySpread } (${ game.awaySpreadOdds })`}\n  //             </Button>\n  //             <Button \n  //               onClick={(e) => handleClick(e)}\n  //               value={[\n  //                 game.awayTeam,\n  //                 game.awaySpread\n  //               ]}\n  //               data={game}\n  //               className='render-over'\n  //             >\n  //               O/{game.overUnder}\n  //             </Button>\n  //             {/* </Button> */}\n  //             {/* <button onClick={(evt) => handleClick(evt, game)} value={{ spread: game.awaySpread, away: game.awayTeam, home: game.homeTeam }} className='render-moneyline' id='away-moneyline'>{game.awayMoneyLine.toString().charAt(0)==='-' ? game.awayMoneyLine : `+${ game.awayMoneyLine }`}</button> */}\n  //             {/* <button className='render-spread'>{game.awaySpread.toString().charAt(0)==='-' ? game.awaySpread  : `+${ game.awaySpread } (${ game.awaySpreadOdds })`}</button>\n  //             <button className='render-over'>O/{game.overUnder}</button> */}\n  //           </div>\n  //           <div className='render-game'>\n  //             <div className='render-team'>{game.homeTeam}</div>\n  //             <button className='render-moneyline'>{game.homeMoneyLine.toString().charAt(0)==='-' ? game.homeMoneyLine : `+${ game.homeMoneyLine }`}</button>\n  //             <button className='render-spread'>{game.homeSpread.toString().charAt(0)==='-' ? game.homeSpread : `+${ game.homeSpread } (${ game.homeSpreadOdds })`}</button>\n  //             <button className='render-under'>U/{game.overUnder}</button>\n  //           </div>\n  //         </div>\n  //       )}\n  //     </div>\n  //     <div className='bet-slip'>\n  //       {clickData.isLoading ? <div>bet Slip</div> : \n  //         <BetSlip data={clickData} />\n  //       }\n  //     </div>\n  //   </div>\n  // );\n};\n\nexport default RenderLines;","map":{"version":3,"sources":["/Users/keenanheller/Desktop/bootcamp-homeworks/sportsbook/client/src/components/RenderLines.js"],"names":["React","useContext","useEffect","useState","useCallback","ActiveLinesContext","BetSlip","Button","RenderLinesContext","createContext","RenderLines","click","setClick","data","isLoading","clickData","setClickData","sportsLines","header","console","log","handleClick","e","game","preventDefault","persist","target","value","map","h","i","key","awayTeam","away","line","awayMoneyLine","toString","charAt","awaySpread","awaySpreadOdds","overUnder","gameTimeEst","homeTeam","homeMoneyLine","homeSpread","homeSpreadOdds"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect, useState, useCallback } from 'react';\nimport { ActiveLinesContext } from './ActiveLines';\nimport '../styles/RenderLines.css'\nimport BetSlip from './BetSlip';\nimport Button from './Button';\nexport const RenderLinesContext = React.createContext();\n\nconst RenderLines = () => {\n  // const [sportsLines, renderSportsLines] = useState\n  const [click, setClick] = useState(false);\n  const [clickData, setClickData] = useState({ data: null, isLoading: true })\n  const sportsLines = useContext(ActiveLinesContext);\n  const header = ['TIME', 'TEAM', 'MONEY', 'SPREAD', 'TOTAL'];\n  console.log('hello');\n  console.log(clickData);\n  \n  const handleClick = (e, game) => {\n    e.preventDefault();\n    e.persist();\n    console.log(e);\n    console.log(e.target.value)\n    setClickData({ data: game,  isLoading: false })\n    console.log(clickData);\n  };\n\n  useEffect(() => {\n    // window.addEventListener(\"click\", handleClick)\n    // if(clickData.isLoading) {\n\n    // } else {\n    //   console.log('hey')\n    // }\n    // console.log(sportsLines);\n  // }, [sportsLines]);\n    // console.log(clickData.isLoading)\n    // return () => window.removeEventListener(\"click\", handleClick);\n  }, [clickData]);\n\n  return (\n    <div className='container'>\n      <div className='game-container'>\n        <div className='render-sport-title'>NFL</div>\n        <table className='table'>\n          <thead>\n            <tr>{header.map((h, i) => <th key={i}>{h}</th>)}</tr>\n          </thead>\n        </table>\n            {sportsLines.map(game => {\n              return (\n                <table className='render-main-body'>\n                  <tbody>\n                    <tr key={game.key}>\n                      <td>\n                        <table className='render-sub-body'>\n                          <tbody>\n                            <tr>\n                              <td>{game.awayTeam}</td>\n                              <td>\n                                <Button \n                                  onClick={(e) => handleClick(e, game)}\n                                  value={[{\n                                    away: game.awayTeam,\n                                    line: game.awayMoneyLine\n                                  }]}\n                                  data={game}\n                                  className='render-moneyline'\n                                >\n                                  {game.awayMoneyLine.toString().charAt(0)==='-' ? game.awayMoneyLine : `+${ game.awayMoneyLine }`}\n                                </Button>\n                              </td>\n                              <td>\n                                <Button \n                                  onClick={(e) => handleClick(e, game)}\n                                  value={[\n                                    game.awayTeam,\n                                    game.awaySpread\n                                  ]}\n                                  data={{data: game}}\n                                  className='render-spread'\n                                >\n                                  {game.awaySpread.toString().charAt(0)==='-' ? game.awaySpread  : `+${ game.awaySpread } (${ game.awaySpreadOdds })`}\n                                </Button>\n                              </td>\n                              <td>\n                                <Button \n                                  onClick={(e) => handleClick(e, game)}\n                                  value={[\n                                    game.awayTeam,\n                                    game.awaySpread\n                                  ]}\n                                  data={game}\n                                  className='render-over'\n                                >\n                                  O/{game.overUnder}\n                                </Button>\n                              </td>\n                            </tr>\n                          </tbody>\n                        </table>\n                      </td>\n                    </tr>\n                    <tr>\n                      <td>\n                        <table className='render-gametime'>\n                          <tbody>\n                            <tr>\n                              <td>{game.gameTimeEst}</td>\n                            </tr>\n                          </tbody>\n                        </table>\n                      </td>\n                    </tr>\n                    <tr>\n                      <td>\n                        <table className='render-sub-body'>\n                          <tbody>\n                            <tr>\n                              <td>{game.homeTeam}</td>\n                              <td>\n                                <Button \n                                  onClick={(e) => handleClick(e, game)}\n                                  value={[{\n                                    away: game.homeTeam,\n                                    line: game.homeMoneyLine\n                                  }]}\n                                  data={game}\n                                  className='render-moneyline'\n                                >\n                                  {game.homeMoneyLine.toString().charAt(0)==='-' ? game.homeMoneyLine : `+${ game.homeMoneyLine }`}\n                                </Button>\n                              </td>\n                              <td>\n                                <Button \n                                  onClick={(e) => handleClick(e, game)}\n                                  value={[\n                                    game.homeTeam,\n                                    game.homeSpread\n                                  ]}\n                                  data={{data: game}}\n                                  className='render-spread'\n                                >\n                                  {game.homeSpread.toString().charAt(0)==='-' ? game.homeSpread  : `+${ game.homeSpread } (${ game.homeSpreadOdds })`}\n                                </Button>\n                              </td>\n                              <td>\n                                <Button \n                                  onClick={(e) => handleClick(e, game)}\n                                  value={[\n                                    game.homeTeam,\n                                    game.homeSpread\n                                  ]}\n                                  data={game}\n                                  className='render-over'\n                                >\n                                  U/{game.overUnder}\n                                </Button>\n                              </td>\n                            </tr>\n                          </tbody>\n                        </table>\n                      </td>\n                    </tr>\n                  </tbody>\n                </table>\n              );\n            })}\n      </div>\n      {/* <div className='bet-slip'>\n        {clickData.isLoading ? <div>bet Slip</div> : \n          <BetSlip data={clickData} />\n        }\n      </div> */}\n      <div className='bet-slip'>\n        <BetSlip data={clickData} />\n        \n      </div>\n\n    </div>\n  );\n\n  // return (\n  //   <div className='container'>\n  //     <div className='game-container'>\n  //       <div className='render-sport-title'>NFL</div>\n  //       <div className='render-game-summary'>\n\n  //       </div>\n  //       {sportsLines.map(game => \n  //         <div className='render-games' key={game.key}>\n  //           <div className='render-game-summary'>\n  //             <div className='render-gamedate'>{game.gameDate}</div>\n  //             <div className='render-gametime'>{game.gameTimeEst}</div>\n  //           </div>\n  //           <div className='render-game'>\n  //             <div className='render-team'>{game.awayTeam}</div>\n  //             <Button \n  //               onClick={(e) => handleClick(e, game)}\n  //               value={[{\n  //                 away: game.awayTeam,\n  //                 line: game.awayMoneyLine\n  //               }]}\n  //                 // ...game\n  //                 // game.awayTeam,\n  //                 // game.awayMoneyLine\n  //               // }\n  //               data={game}\n  //               className='render-moneyline'\n  //             >\n  //               {game.awayMoneyLine.toString().charAt(0)==='-' ? game.awayMoneyLine : `+${ game.awayMoneyLine }`}\n  //             </Button>\n  //             <Button \n  //               onClick={(e) => handleClick(e)}\n  //               value={[\n  //                 game.awayTeam,\n  //                 game.awaySpread\n  //               ]}\n  //               data={{data: game}}\n  //               className='render-spread'\n  //             >\n  //               {game.awaySpread.toString().charAt(0)==='-' ? game.awaySpread  : `+${ game.awaySpread } (${ game.awaySpreadOdds })`}\n  //             </Button>\n  //             <Button \n  //               onClick={(e) => handleClick(e)}\n  //               value={[\n  //                 game.awayTeam,\n  //                 game.awaySpread\n  //               ]}\n  //               data={game}\n  //               className='render-over'\n  //             >\n  //               O/{game.overUnder}\n  //             </Button>\n\n\n  //             {/* </Button> */}\n  //             {/* <button onClick={(evt) => handleClick(evt, game)} value={{ spread: game.awaySpread, away: game.awayTeam, home: game.homeTeam }} className='render-moneyline' id='away-moneyline'>{game.awayMoneyLine.toString().charAt(0)==='-' ? game.awayMoneyLine : `+${ game.awayMoneyLine }`}</button> */}\n  //             {/* <button className='render-spread'>{game.awaySpread.toString().charAt(0)==='-' ? game.awaySpread  : `+${ game.awaySpread } (${ game.awaySpreadOdds })`}</button>\n  //             <button className='render-over'>O/{game.overUnder}</button> */}\n  //           </div>\n  //           <div className='render-game'>\n  //             <div className='render-team'>{game.homeTeam}</div>\n  //             <button className='render-moneyline'>{game.homeMoneyLine.toString().charAt(0)==='-' ? game.homeMoneyLine : `+${ game.homeMoneyLine }`}</button>\n  //             <button className='render-spread'>{game.homeSpread.toString().charAt(0)==='-' ? game.homeSpread : `+${ game.homeSpread } (${ game.homeSpreadOdds })`}</button>\n  //             <button className='render-under'>U/{game.overUnder}</button>\n  //           </div>\n  //         </div>\n  //       )}\n  //     </div>\n  //     <div className='bet-slip'>\n  //       {clickData.isLoading ? <div>bet Slip</div> : \n  //         <BetSlip data={clickData} />\n  //       }\n  //     </div>\n  //   </div>\n\n  // );\n};\n\nexport default RenderLines;\n"]},"metadata":{},"sourceType":"module"}