{"ast":null,"code":"import _toConsumableArray from \"/Users/keenanheller/Desktop/bootcamp-homeworks/sportsbook/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _regeneratorRuntime from \"/Users/keenanheller/Desktop/bootcamp-homeworks/sportsbook/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/keenanheller/Desktop/bootcamp-homeworks/sportsbook/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/Users/keenanheller/Desktop/bootcamp-homeworks/sportsbook/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/keenanheller/Desktop/bootcamp-homeworks/sportsbook/client/src/components/RenderBetSlips.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport '../styles/BetSlip.css';\nimport API from '../utils/API';\nimport BetSlip from './BetSlip';\nimport Button from './Button';\n\nvar RenderBetSlips = function RenderBetSlips(props) {\n  _s();\n\n  var _useState = useState(undefined),\n      _useState2 = _slicedToArray(_useState, 2),\n      toLose = _useState2[0],\n      setToLose = _useState2[1];\n\n  var _useState3 = useState(),\n      _useState4 = _slicedToArray(_useState3, 2),\n      toWin = _useState4[0],\n      setToWin = _useState4[1];\n\n  var newSlips = props.data;\n\n  var _useState5 = useState([]),\n      _useState6 = _slicedToArray(_useState5, 2),\n      slipList = _useState6[0],\n      setSlipList = _useState6[1];\n\n  var handleDelete = function handleDelete(e) {\n    console.log(e);\n    console.log(e.target.id);\n    console.log(slipList);\n    var newList = slipList.filter(function (slip, id) {\n      return id != e.target.id;\n    });\n    console.log(newList);\n    setSlipList(newList);\n    newSlips = {};\n  };\n\n  var handleClear = function handleClear() {\n    newSlips = {};\n    setSlipList([]);\n  };\n\n  var updateSlip = function updateSlip(id, attributes) {\n    var index = slipList.findIndex(function (x) {\n      return x.id == id;\n    });\n    var updateList = slipList.slice();\n    console.log(index);\n\n    if (index == -1) {} else {// setSlipList([...])\n    }\n  };\n\n  var handleChange = function handleChange(e, data) {\n    console.log(data);\n    console.log(e);\n    console.log(data.odds.toString()[0]);\n\n    switch (data.odds.toString()[0]) {\n      case '-':\n        console.log(data.odds);\n        var tempCalc = Math.abs(e.target.value * data.odds * .01);\n        console.log(tempCalc);\n        var finalCalc = tempCalc - e.target.value;\n        setToLose(e.target.value);\n        data.toLose = e.target.value;\n        console.log((e.target.value - finalCalc).toFixed(2));\n        setToWin((e.target.value - finalCalc).toFixed(2));\n        data.toWin = (e.target.value - finalCalc).toFixed(2);\n        console.log(data); // return data;\n\n        var index = slipList.findIndex(function (x) {\n          return console.log(x);\n        });\n\n        if (slipList.length === 1) {\n          slipList.map(function (slip) {\n            console.log(slip);\n          });\n        } else {}\n\n        var slice = slipList.slice(0, parseInt(e.target.id));\n        console.log(slice);\n        console.log(slipList); // console.log('slice', slice)\n\n        break;\n\n      default:\n        setToLose(e.target.value);\n        data.toLose = e.target.value;\n        console.log((e.target.value * data.odds * .01).toFixed(2));\n        setToWin((e.target.value * data.odds * .01).toFixed(2));\n        data.toWin = (e.target.value * data.odds * .01).toFixed(2);\n        console.log(slipList);\n        break;\n    }\n\n    ;\n  };\n\n  var handleSubmit = function handleSubmit(event) {\n    event.preventDefault();\n    event.persist();\n    console.log(slipList);\n    var userData = JSON.parse(localStorage.getItem('user'));\n    var userId = userData._id;\n    var gameKey = props.data.data.key;\n    var betType = props.data.slipData.type;\n    var team = props.data.slipData.team;\n    var odds = props.data.slipData.odds;\n    var outcome = null;\n    var payout = null;\n    var toLose = null;\n    var toWin = null;\n    var line = null;\n    var status = 'LIVE'; // function to post slip data based on slip type\n\n    var slipData = /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.t0 = betType;\n                _context.next = _context.t0 === 'MONEYLINE' ? 3 : _context.t0 === 'SPREAD' ? 6 : _context.t0 === 'TOTALS-OVER' ? 10 : _context.t0 === 'TOTALS-UNDER' ? 14 : 18;\n                break;\n\n              case 3:\n                _context.next = 5;\n                return API.submitBetSlip({\n                  userId,\n                  gameKey,\n                  betType,\n                  team,\n                  line,\n                  odds,\n                  toLose,\n                  toWin,\n                  status,\n                  outcome,\n                  payout\n                }).then(function (res) {\n                  console.log(res);\n                }).catch(function (err) {\n                  console.log(err);\n                });\n\n              case 5:\n                return _context.abrupt(\"break\", 20);\n\n              case 6:\n                line = props.data.slipData.line;\n                _context.next = 9;\n                return API.submitBetSlip({\n                  userId,\n                  gameKey,\n                  betType,\n                  team,\n                  line,\n                  odds,\n                  toLose,\n                  toWin,\n                  status,\n                  outcome,\n                  payout\n                }).then(function (res) {\n                  console.log(res);\n                }).catch(function (err) {\n                  console.log(err);\n                });\n\n              case 9:\n                return _context.abrupt(\"break\", 20);\n\n              case 10:\n                line = props.data.slipData.line;\n                _context.next = 13;\n                return API.submitBetSlip({\n                  userId,\n                  gameKey,\n                  betType,\n                  team,\n                  line,\n                  odds,\n                  toLose,\n                  toWin,\n                  status,\n                  outcome,\n                  payout\n                }).then(function (res) {\n                  console.log(res);\n                }).catch(function (err) {\n                  console.log(err);\n                });\n\n              case 13:\n                return _context.abrupt(\"break\", 20);\n\n              case 14:\n                line = props.data.slipData.line;\n                _context.next = 17;\n                return API.submitBetSlip({\n                  userId,\n                  gameKey,\n                  betType,\n                  team,\n                  line,\n                  odds,\n                  toLose,\n                  toWin,\n                  status,\n                  outcome,\n                  payout\n                }).then(function (res) {\n                  console.log(res);\n                }).catch(function (err) {\n                  console.log(err);\n                });\n\n              case 17:\n                return _context.abrupt(\"break\", 20);\n\n              case 18:\n                console.log('none selected');\n                return _context.abrupt(\"break\", 20);\n\n              case 20:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function slipData() {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    slipData();\n  };\n\n  useEffect(function () {\n    // setSlips(slips);\n    // const slips = props.data;\n    // const [slipList, setSlipList] = useState();\n    console.log('mounted');\n    console.log(newSlips);\n\n    if (newSlips === undefined || newSlips === {} || newSlips === null) {} else {\n      setSlipList(function (slipList) {\n        return [].concat(_toConsumableArray(slipList), [newSlips]);\n      });\n      console.log(\"added\");\n    }\n\n    console.log(slipList); // setSlips(slips)\n  }, [newSlips]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"slip\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"slip-title\",\n      children: \"BET SLIP\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 7\n    }, _this), slipList === undefined || slipList.length === 0 ? '' : slipList.map(function (slip, i) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(BetSlip, {\n          data: slip,\n          id: i,\n          onRemove: handleDelete,\n          onSubmit: handleSubmit,\n          onChange: handleChange,\n          onUpdate: updateSlip,\n          toWin: toWin\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 15\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 13\n      }, _this);\n    }), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"slip-buttons\",\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        onClick: handleClear,\n        id: props.id,\n        type: \"button\",\n        className: \"slip-button\",\n        children: \"CANCEL\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: function onClick(event) {\n          return props.onSubmit(event);\n        },\n        className: \"slip-butto\",\n        id: \"submit-slip\",\n        children: \"PLACE BET\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 169,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(RenderBetSlips, \"wj/nUvHGae5ISlTeCiUyI4bzC6g=\");\n\n_c = RenderBetSlips;\nexport default RenderBetSlips; // take the value from the slip, set it to the array here, then re render the whole page using useffect dependency\n\nvar _c;\n\n$RefreshReg$(_c, \"RenderBetSlips\");","map":{"version":3,"sources":["/Users/keenanheller/Desktop/bootcamp-homeworks/sportsbook/client/src/components/RenderBetSlips.js"],"names":["React","useEffect","useState","API","BetSlip","Button","RenderBetSlips","props","undefined","toLose","setToLose","toWin","setToWin","newSlips","data","slipList","setSlipList","handleDelete","e","console","log","target","id","newList","filter","slip","handleClear","updateSlip","attributes","index","findIndex","x","updateList","slice","handleChange","odds","toString","tempCalc","Math","abs","value","finalCalc","toFixed","length","map","parseInt","handleSubmit","event","preventDefault","persist","userData","JSON","parse","localStorage","getItem","userId","_id","gameKey","key","betType","slipData","type","team","outcome","payout","line","status","submitBetSlip","then","res","catch","err","i","onSubmit"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport '../styles/BetSlip.css';\nimport API from '../utils/API';\nimport BetSlip from './BetSlip';\nimport Button from './Button';\n\nconst RenderBetSlips = (props) => {\n  const [toLose, setToLose] = useState(undefined);\n  const [toWin, setToWin] = useState();\n  let newSlips = props.data;\n  const [slipList, setSlipList] = useState([]);\n\n  const handleDelete = (e) => {\n    console.log(e);\n    console.log(e.target.id)\n    console.log(slipList)\n    let newList = slipList.filter((slip, id) => id != e.target.id);\n    console.log(newList)\n    setSlipList(newList);\n    newSlips = {};\n  }\n\n  const handleClear = () => {\n    newSlips = {};\n    setSlipList([]);\n\n  }\n\n  const updateSlip = (id, attributes) => {\n    let index = slipList.findIndex(x => x.id == id);\n    let updateList = slipList.slice()\n    console.log(index);\n    if (index == -1) {\n\n    } else {\n      // setSlipList([...])\n    }\n  }\n\n  const handleChange = (e, data) => {\n    console.log(data);\n    \n    console.log(e);\n    console.log(data.odds.toString()[0]);\n    switch (data.odds.toString()[0]) {\n      case '-':\n        console.log(data.odds)\n        let tempCalc = Math.abs(e.target.value * data.odds * .01);\n        console.log(tempCalc)\n        let finalCalc = tempCalc - e.target.value;\n        setToLose(e.target.value)\n        data.toLose = e.target.value;\n        console.log((e.target.value - finalCalc).toFixed(2))\n        setToWin((e.target.value - finalCalc).toFixed(2));\n        data.toWin=(e.target.value - finalCalc).toFixed(2);\n        console.log(data);\n        // return data;\n        let index = slipList.findIndex(x => console.log(x));\n        if (slipList.length === 1) {\n          slipList.map(slip => {\n            console.log(slip)\n          })\n        } else {\n\n        }\n        let slice = slipList.slice(0, parseInt(e.target.id));\n        console.log(slice);\n        console.log(slipList)\n        // console.log('slice', slice)\n        break;\n      default:\n        setToLose(e.target.value);\n        data.toLose = e.target.value;\n        console.log((e.target.value * data.odds * .01).toFixed(2))\n        setToWin((e.target.value * data.odds * .01).toFixed(2));\n        data.toWin = (e.target.value * data.odds * .01).toFixed(2)\n        console.log(slipList)\n        break;\n    };\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    event.persist();\n    console.log(slipList);\n    const userData = JSON.parse(localStorage.getItem('user'));\n    const userId = userData._id;\n    const gameKey = props.data.data.key;\n    const betType = props.data.slipData.type;\n    const team = props.data.slipData.team;\n    const odds = props.data.slipData.odds;\n    const outcome = null;\n    const payout = null;\n    const toLose = null;\n    const toWin = null;\n    let line = null;\n    const status = 'LIVE';\n\n    // function to post slip data based on slip type\n    const slipData = async () => {\n      switch (betType) {\n        case 'MONEYLINE':\n          await API.submitBetSlip({userId, gameKey, betType, team, line, odds, toLose, toWin, status, outcome, payout})\n            .then((res) => {\n              console.log(res);\n            })\n            .catch(err => {\n              console.log(err);\n            });\n          break;\n        case 'SPREAD':\n          line = props.data.slipData.line;\n          await API.submitBetSlip({userId, gameKey, betType, team, line, odds, toLose, toWin, status, outcome, payout})\n            .then((res) => {\n              console.log(res);\n            })\n            .catch(err => {\n              console.log(err);\n            });\n          break;\n        case 'TOTALS-OVER':\n          line = props.data.slipData.line;\n          await API.submitBetSlip({userId, gameKey, betType, team, line, odds, toLose, toWin, status, outcome, payout})\n            .then((res) => {\n              console.log(res);\n            })\n            .catch(err => {\n              console.log(err);\n            });\n          break;\n        case 'TOTALS-UNDER':\n          line = props.data.slipData.line;\n          await API.submitBetSlip({userId, gameKey, betType, team, line, odds, toLose, toWin, status, outcome, payout})\n            .then((res) => {\n              console.log(res);\n            })\n            .catch(err => {\n              console.log(err);\n            });\n          break;\n        default:\n          console.log('none selected');\n          break;\n      }\n    };\n\n    slipData();\n  };\n\n  useEffect(() => {\n    // setSlips(slips);\n    // const slips = props.data;\n    // const [slipList, setSlipList] = useState();\n    console.log('mounted')\n    console.log(newSlips)\n    if (newSlips === undefined || newSlips === {} || newSlips === null) {\n\n    } else {\n      setSlipList(slipList => [...slipList, newSlips])\n      console.log(\"added\")\n      \n    }\n    console.log(slipList)\n    // setSlips(slips)\n\n  }, [newSlips]);\n\n  return (\n    <div className='slip'>\n      <div className='slip-title'>BET SLIP</div>\n      {(slipList === undefined || slipList.length === 0) ? '' :\n        slipList.map((slip, i) => {\n          return (\n            <div>\n              <BetSlip data={slip} id={i} onRemove={handleDelete} onSubmit={handleSubmit} onChange={handleChange} onUpdate={updateSlip} toWin={toWin}/>\n            </div>\n          )\n        })\n      }\n      <div className='slip-buttons'>\n        <Button\n          onClick={handleClear}\n          id={props.id}\n          type='button'\n          className='slip-button'\n        >\n          CANCEL\n        </Button>\n        <Button\n          onClick={(event) => props.onSubmit(event)}\n          className='slip-butto'\n          id='submit-slip'\n        >\n          PLACE BET\n        </Button>\n        {/* <button onClick={(event) => handleSubmit(event)} className='slip-button' id='submit-slip'>PLACE BET</button> */}\n      </div>\n\n    </div>\n  )\n};\n\nexport default RenderBetSlips;\n\n// take the value from the slip, set it to the array here, then re render the whole page using useffect dependency"]},"metadata":{},"sourceType":"module"}