{"ast":null,"code":"import _objectSpread from \"/Users/keenanheller/Desktop/bootcamp-homeworks/sportsbook/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"/Users/keenanheller/Desktop/bootcamp-homeworks/sportsbook/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/keenanheller/Desktop/bootcamp-homeworks/sportsbook/client/src/components/ActiveGames.js\";\nimport React, { useEffect, useState, useContext } from 'react';\nimport API from '../utils/API';\nimport ActiveLines from './ActiveLines';\nimport { SportsContext } from './ActiveSports';\nexport var GamesContext = React.createContext();\n\nfunction ActiveGames() {\n  // const sports = useContext(SportsContext);\n  // const sports = useContext(SportsContext);\n  var moneyLineArr, spreadArr; // console.log(sports)\n\n  var _useState = useState({\n    moneyline: null,\n    spread: null,\n    isLoading: true\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      games = _useState2[0],\n      setGames = _useState2[1]; // const [spreads, setSpreads] = useState({ spreadd: null });\n  // const [isLoading, setIsLoading] = useState(true);\n\n\n  var sports = useContext(SportsContext);\n  useEffect(function () {\n    Promise.all(getMLData(), getSpreadData()).then(function (_ref) {\n      var _ref2 = _slicedToArray(_ref, 2),\n          moneyline = _ref2[0],\n          spread = _ref2[1];\n\n      setGames(_objectSpread({}, games, {\n        moneyline: moneyline,\n        spread: spread,\n        isLoading: false\n      }));\n    });\n\n    function getMLData() {\n      return API.getLines(sports[1], 'moneyline');\n    }\n\n    function getSpreadData() {\n      return API.getLines(sports[1], 'spread');\n    } // const fetchData = async () => {\n    //   console.log(sports);\n    //   await (API.getLines(sports[1], 'moneyline'))\n    //     .then(res => setGames({\n    //       ...games,\n    //       moneyline: res.data\n    //     }))\n    //     .catch(err => {\n    //       console.log(err)\n    //     });\n    //   await API.getLines(sports[1], 'spread')\n    //     // console.log('in')\n    //     .then(res => setSpreads({\n    //       ...spreads,\n    //       spreadd: res.data\n    //     }),\n    //       setIsLoading(false)\n    //     )\n    //     .catch(err => {\n    //         console.log(err)\n    //     });\n    // };\n    // fetchData();\n\n  }, []); // async function getMoneyLine() {\n  //   await API.getLines(sports[1], 'moneyline')\n  //     .then(res => {\n  //       setGames(prevGames => [\n  //         ...prevGames,\n  //         {\n  //           moneyline: res.data.data\n  //         }\n  //       ]);\n  //     })\n  //     .catch(err => {\n  //       console.log(err)\n  //     });\n  // };\n  // async function getSpreadLine() {\n  //   await API.getLines(sports[1], 'spread')\n  //     .then(res => {\n  //       setGames(prevGames => [\n  //         ...prevGames, \n  //         {\n  //           spread: res.data.data\n  //         }\n  //       ])\n  //       console.log(games);\n  //     })\n  //     .catch(err => {\n  //       console.log(err)\n  //     });\n  // };\n  // async function getTotalsLine() {\n  //   await API.getLines(sports[1], 'totals')\n  //     .then(res => {\n  //       setGames(prevGames => [\n  //         ...prevGames,\n  //         {\n  //           totals: res.data.data  \n  //         }\n  //       ])\n  //       console.log(games);\n  //     })\n  //     .catch(err => {\n  //       console.log(err)\n  //     });\n  // };\n  //   fetchData();\n  // }, []);\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 5\n    }\n  }, games.isLoading ? '' : /*#__PURE__*/React.createElement(GamesContext.Provider, {\n    value: games,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ActiveLines, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 11\n    }\n  })));\n  {\n    /* [{games}] */\n  }\n  {\n    /* {games.map(game => <div key={game.home_team}>{game.teams[0]} vs. {game.teams[1]}</div>)} */\n  }\n  {\n    /* <GamesContext.Provider value={{games}}>\n     <ActiveLines />\n    </GamesContext.Provider> */\n  }\n}\n\n;\nexport default ActiveGames;","map":{"version":3,"sources":["/Users/keenanheller/Desktop/bootcamp-homeworks/sportsbook/client/src/components/ActiveGames.js"],"names":["React","useEffect","useState","useContext","API","ActiveLines","SportsContext","GamesContext","createContext","ActiveGames","moneyLineArr","spreadArr","moneyline","spread","isLoading","games","setGames","sports","Promise","all","getMLData","getSpreadData","then","getLines"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,UAArC,QAAuD,OAAvD;AACA,OAAOC,GAAP,MAAgB,cAAhB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,SAASC,aAAT,QAA8B,gBAA9B;AACA,OAAO,IAAMC,YAAY,GAAGP,KAAK,CAACQ,aAAN,EAArB;;AAEP,SAASC,WAAT,GAAuB;AACrB;AACA;AACA,MAAIC,YAAJ,EAAkBC,SAAlB,CAHqB,CAKrB;;AALqB,kBAMKT,QAAQ,CAAC;AAAEU,IAAAA,SAAS,EAAE,IAAb;AAAmBC,IAAAA,MAAM,EAAE,IAA3B;AAAiCC,IAAAA,SAAS,EAAE;AAA5C,GAAD,CANb;AAAA;AAAA,MAMdC,KANc;AAAA,MAMPC,QANO,kBAOrB;AACA;;;AACA,MAAMC,MAAM,GAAGd,UAAU,CAACG,aAAD,CAAzB;AAEAL,EAAAA,SAAS,CAAC,YAAM;AACdiB,IAAAA,OAAO,CAACC,GAAR,CAAYC,SAAS,EAArB,EAAyBC,aAAa,EAAtC,EACGC,IADH,CACQ,gBAAyB;AAAA;AAAA,UAAvBV,SAAuB;AAAA,UAAZC,MAAY;;AAC7BG,MAAAA,QAAQ,mBACHD,KADG;AAENH,QAAAA,SAAS,EAAEA,SAFL;AAGNC,QAAAA,MAAM,EAAEA,MAHF;AAINC,QAAAA,SAAS,EAAE;AAJL,SAAR;AAMD,KARH;;AAUA,aAASM,SAAT,GAAqB;AACnB,aAAOhB,GAAG,CAACmB,QAAJ,CAAaN,MAAM,CAAC,CAAD,CAAnB,EAAwB,WAAxB,CAAP;AACD;;AAED,aAASI,aAAT,GAAyB;AACvB,aAAOjB,GAAG,CAACmB,QAAJ,CAAaN,MAAM,CAAC,CAAD,CAAnB,EAAwB,QAAxB,CAAP;AACD,KAjBa,CAoBd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAGA;AACA;;AACD,GA/CQ,EA+CN,EA/CM,CAAT,CAXqB,CA4DnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEF;AACA;;AAEA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGF,KAAK,CAACD,SAAN,GAAkB,EAAlB,gBACC,oBAAC,YAAD,CAAc,QAAd;AAAuB,IAAA,KAAK,EAAEC,KAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAFJ,CADF;AASI;AAAC;AAAgB;AACjB;AAAC;AAA+F;AAChG;AAAC;AACP;AACA;AAAkC;AAGjC;;AAAA;AAED,eAAeN,WAAf","sourcesContent":["import React, { useEffect, useState, useContext } from 'react';\nimport API from '../utils/API';\nimport ActiveLines from './ActiveLines';\nimport { SportsContext } from './ActiveSports';\nexport const GamesContext = React.createContext();\n\nfunction ActiveGames() {\n  // const sports = useContext(SportsContext);\n  // const sports = useContext(SportsContext);\n  let moneyLineArr, spreadArr;\n\n  // console.log(sports)\n  const [games, setGames] = useState({ moneyline: null, spread: null, isLoading: true });\n  // const [spreads, setSpreads] = useState({ spreadd: null });\n  // const [isLoading, setIsLoading] = useState(true);\n  const sports = useContext(SportsContext);\n\n  useEffect(() => {\n    Promise.all(getMLData(), getSpreadData())\n      .then(([moneyline, spread]) => {\n        setGames({\n          ...games,\n          moneyline: moneyline,\n          spread: spread,\n          isLoading: false\n        })\n      })\n    \n    function getMLData() {\n      return API.getLines(sports[1], 'moneyline');\n    }\n\n    function getSpreadData() {\n      return API.getLines(sports[1], 'spread');\n    }\n\n    \n    // const fetchData = async () => {\n    //   console.log(sports);\n    //   await (API.getLines(sports[1], 'moneyline'))\n    //     .then(res => setGames({\n    //       ...games,\n    //       moneyline: res.data\n    //     }))\n    //     .catch(err => {\n    //       console.log(err)\n    //     });\n\n    //   await API.getLines(sports[1], 'spread')\n    //     // console.log('in')\n    //     .then(res => setSpreads({\n    //       ...spreads,\n    //       spreadd: res.data\n    //     }),\n\n    //       setIsLoading(false)\n    //     )\n    //     .catch(err => {\n    //         console.log(err)\n    //     });\n\n\n    // };\n    // fetchData();\n  }, []);\n\n    // async function getMoneyLine() {\n    //   await API.getLines(sports[1], 'moneyline')\n    //     .then(res => {\n    //       setGames(prevGames => [\n    //         ...prevGames,\n    //         {\n    //           moneyline: res.data.data\n    //         }\n    //       ]);\n    //     })\n    //     .catch(err => {\n    //       console.log(err)\n    //     });\n    // };\n\n    // async function getSpreadLine() {\n    //   await API.getLines(sports[1], 'spread')\n    //     .then(res => {\n    //       setGames(prevGames => [\n    //         ...prevGames, \n    //         {\n    //           spread: res.data.data\n    //         }\n    //       ])\n    //       console.log(games);\n    //     })\n    //     .catch(err => {\n    //       console.log(err)\n    //     });\n    // };\n\n    // async function getTotalsLine() {\n    //   await API.getLines(sports[1], 'totals')\n    //     .then(res => {\n    //       setGames(prevGames => [\n    //         ...prevGames,\n    //         {\n    //           totals: res.data.data  \n    //         }\n    //       ])\n    //       console.log(games);\n    //     })\n    //     .catch(err => {\n    //       console.log(err)\n    //     });\n    // };\n\n  //   fetchData();\n  // }, []);\n\n  return (\n    <div>\n      {games.isLoading ? '' :\n        <GamesContext.Provider value={games}>\n          <ActiveLines />\n        </GamesContext.Provider>\n      }\n    </div>\n  );\n      {/* [{games}] */}\n      {/* {games.map(game => <div key={game.home_team}>{game.teams[0]} vs. {game.teams[1]}</div>)} */}\n      {/* <GamesContext.Provider value={{games}}>\n        <ActiveLines />\n      </GamesContext.Provider> */}\n    \n  \n};\n\nexport default ActiveGames;\n"]},"metadata":{},"sourceType":"module"}