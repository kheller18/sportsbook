{"ast":null,"code":"import _regeneratorRuntime from \"/Users/keenanheller/Desktop/bootcamp-homeworks/sportsbook/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/keenanheller/Desktop/bootcamp-homeworks/sportsbook/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/Users/keenanheller/Desktop/bootcamp-homeworks/sportsbook/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/keenanheller/Desktop/bootcamp-homeworks/sportsbook/client/src/components/ActiveGames.js\";\nimport React, { useEffect, useState, useContext } from 'react';\nimport API from '../utils/API'; // import ActiveLines from './ActiveLines';\n\nimport { SportsContext } from './ActiveSports'; // export const GamesContext = React.createContext();\n\nfunction ActiveGames() {\n  // const sports = useContext(SportsContext);\n  // const sports = useContext(SportsContext);\n  // console.log(sports)\n  var _useState = useState({\n    moneyline: null,\n    spread: null\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      games = _useState2[0],\n      setGames = _useState2[1];\n\n  var _useState3 = useState(true),\n      _useState4 = _slicedToArray(_useState3, 2),\n      isloading = _useState4[0],\n      setIsLoading = _useState4[1];\n\n  var sports = useContext(SportsContext);\n  useEffect(function () {\n    var fetchData = /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var getMoneyLines, getSpreadLines;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                console.log(sports);\n                _context.next = 3;\n                return API.getLines(sports[1], 'moneyline').then(function (res) {\n                  return console.log(res);\n                }).catch(function (err) {\n                  console.log(err);\n                });\n\n              case 3:\n                getMoneyLines = _context.sent;\n                _context.next = 6;\n                return API.getLines(sports[1], 'spread').then(function (res) {\n                  return console.log(res);\n                }).catch(function (err) {\n                  console.log(err);\n                });\n\n              case 6:\n                getSpreadLines = _context.sent;\n                setGames({\n                  moneyline: getMoneyLines,\n                  spread: getSpreadLines\n                }, console.log(games));\n\n              case 8:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function fetchData() {\n        return _ref.apply(this, arguments);\n      };\n    }(); // async function getMoneyLine() {\n    //   await API.getLines(sports[1], 'moneyline')\n    //     .then(res => {\n    //       setGames(prevGames => [\n    //         ...prevGames,\n    //         {\n    //           moneyline: res.data.data\n    //         }\n    //       ]);\n    //     })\n    //     .catch(err => {\n    //       console.log(err)\n    //     });\n    // };\n    // async function getSpreadLine() {\n    //   await API.getLines(sports[1], 'spread')\n    //     .then(res => {\n    //       setGames(prevGames => [\n    //         ...prevGames, \n    //         {\n    //           spread: res.data.data\n    //         }\n    //       ])\n    //       console.log(games);\n    //     })\n    //     .catch(err => {\n    //       console.log(err)\n    //     });\n    // };\n    // async function getTotalsLine() {\n    //   await API.getLines(sports[1], 'totals')\n    //     .then(res => {\n    //       setGames(prevGames => [\n    //         ...prevGames,\n    //         {\n    //           totals: res.data.data  \n    //         }\n    //       ])\n    //       console.log(games);\n    //     })\n    //     .catch(err => {\n    //       console.log(err)\n    //     });\n    // };\n\n\n    fetchData(); // getTotalsLine();\n  }, [setGames]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 5\n    }\n  });\n}\n\n;\nexport default ActiveGames;","map":{"version":3,"sources":["/Users/keenanheller/Desktop/bootcamp-homeworks/sportsbook/client/src/components/ActiveGames.js"],"names":["React","useEffect","useState","useContext","API","SportsContext","ActiveGames","moneyline","spread","games","setGames","isloading","setIsLoading","sports","fetchData","console","log","getLines","then","res","catch","err","getMoneyLines","getSpreadLines"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,UAArC,QAAuD,OAAvD;AACA,OAAOC,GAAP,MAAgB,cAAhB,C,CACA;;AACA,SAASC,aAAT,QAA8B,gBAA9B,C,CACA;;AAEA,SAASC,WAAT,GAAuB;AACrB;AACA;AAEA;AAJqB,kBAKKJ,QAAQ,CAAC;AAAEK,IAAAA,SAAS,EAAE,IAAb;AAAmBC,IAAAA,MAAM,EAAE;AAA3B,GAAD,CALb;AAAA;AAAA,MAKdC,KALc;AAAA,MAKPC,QALO;;AAAA,mBAMaR,QAAQ,CAAC,IAAD,CANrB;AAAA;AAAA,MAMdS,SANc;AAAA,MAMHC,YANG;;AAOrB,MAAMC,MAAM,GAAGV,UAAU,CAACE,aAAD,CAAzB;AAEAJ,EAAAA,SAAS,CAAC,YAAM;AACd,QAAMa,SAAS;AAAA,0EAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAChBC,gBAAAA,OAAO,CAACC,GAAR,CAAYH,MAAZ;AADgB;AAAA,uBAEYT,GAAG,CAACa,QAAJ,CAAaJ,MAAM,CAAC,CAAD,CAAnB,EAAwB,WAAxB,EACzBK,IADyB,CACpB,UAAAC,GAAG;AAAA,yBAAIJ,OAAO,CAACC,GAAR,CAAYG,GAAZ,CAAJ;AAAA,iBADiB,EAEzBC,KAFyB,CAEnB,UAAAC,GAAG,EAAI;AACZN,kBAAAA,OAAO,CAACC,GAAR,CAAYK,GAAZ;AACD,iBAJyB,CAFZ;;AAAA;AAEVC,gBAAAA,aAFU;AAAA;AAAA,uBAOalB,GAAG,CAACa,QAAJ,CAAaJ,MAAM,CAAC,CAAD,CAAnB,EAAwB,QAAxB,EAC1BK,IAD0B,CACrB,UAAAC,GAAG;AAAA,yBAAIJ,OAAO,CAACC,GAAR,CAAYG,GAAZ,CAAJ;AAAA,iBADkB,EAE1BC,KAF0B,CAEpB,UAAAC,GAAG,EAAI;AACZN,kBAAAA,OAAO,CAACC,GAAR,CAAYK,GAAZ;AACD,iBAJ0B,CAPb;;AAAA;AAOVE,gBAAAA,cAPU;AAahBb,gBAAAA,QAAQ,CACN;AACEH,kBAAAA,SAAS,EAAEe,aADb;AAEEd,kBAAAA,MAAM,EAAEe;AAFV,iBADM,EAKNR,OAAO,CAACC,GAAR,CAAYP,KAAZ,CALM,CAAR;;AAbgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAH;;AAAA,sBAATK,SAAS;AAAA;AAAA;AAAA,OAAf,CADc,CAsBd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEAA,IAAAA,SAAS,GArEK,CAsEd;AACD,GAvEQ,EAuEN,CAACJ,QAAD,CAvEM,CAAT;AAyEA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AASD;;AAAA;AAED,eAAeJ,WAAf","sourcesContent":["import React, { useEffect, useState, useContext } from 'react';\nimport API from '../utils/API';\n// import ActiveLines from './ActiveLines';\nimport { SportsContext } from './ActiveSports';\n// export const GamesContext = React.createContext();\n\nfunction ActiveGames() {\n  // const sports = useContext(SportsContext);\n  // const sports = useContext(SportsContext);\n\n  // console.log(sports)\n  const [games, setGames] = useState({ moneyline: null, spread: null });\n  const [isloading, setIsLoading] = useState(true);\n  const sports = useContext(SportsContext);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      console.log(sports);\n      const getMoneyLines = await API.getLines(sports[1], 'moneyline')\n        .then(res => console.log(res))\n        .catch(err => {\n          console.log(err)\n        });\n      const getSpreadLines = await API.getLines(sports[1], 'spread')\n        .then(res => console.log(res))\n        .catch(err => {\n          console.log(err)\n        });\n\n      setGames(\n        { \n          moneyline: getMoneyLines, \n          spread: getSpreadLines \n        },\n        console.log(games)\n      );\n    };\n    // async function getMoneyLine() {\n    //   await API.getLines(sports[1], 'moneyline')\n    //     .then(res => {\n    //       setGames(prevGames => [\n    //         ...prevGames,\n    //         {\n    //           moneyline: res.data.data\n    //         }\n    //       ]);\n    //     })\n    //     .catch(err => {\n    //       console.log(err)\n    //     });\n    // };\n\n    // async function getSpreadLine() {\n    //   await API.getLines(sports[1], 'spread')\n    //     .then(res => {\n    //       setGames(prevGames => [\n    //         ...prevGames, \n    //         {\n    //           spread: res.data.data\n    //         }\n    //       ])\n    //       console.log(games);\n    //     })\n    //     .catch(err => {\n    //       console.log(err)\n    //     });\n    // };\n\n    // async function getTotalsLine() {\n    //   await API.getLines(sports[1], 'totals')\n    //     .then(res => {\n    //       setGames(prevGames => [\n    //         ...prevGames,\n    //         {\n    //           totals: res.data.data  \n    //         }\n    //       ])\n    //       console.log(games);\n    //     })\n    //     .catch(err => {\n    //       console.log(err)\n    //     });\n    // };\n\n    fetchData();\n    // getTotalsLine();\n  }, [setGames]);\n\n  return (\n    <div>\n      {/* {{games}} */}\n      {/* {games.map(game => <div key={game.home_team}>{game.teams[0]} vs. {game.teams[1]}</div>)} */}\n      {/* <GamesContext.Provider value={{games}}>\n        <ActiveLines />\n      </GamesContext.Provider> */}\n    </div>\n  );\n};\n\nexport default ActiveGames;\n"]},"metadata":{},"sourceType":"module"}