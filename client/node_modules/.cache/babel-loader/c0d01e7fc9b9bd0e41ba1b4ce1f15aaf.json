{"ast":null,"code":"import _objectSpread from\"/Users/keenanheller/Desktop/bootcamp-homeworks/sportsbook/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _regeneratorRuntime from\"/Users/keenanheller/Desktop/bootcamp-homeworks/sportsbook/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/keenanheller/Desktop/bootcamp-homeworks/sportsbook/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Users/keenanheller/Desktop/bootcamp-homeworks/sportsbook/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{jsx as _jsx}from\"react/jsx-runtime\";import React,{useEffect,useState,useContext}from'react';import API from'../utils/API';import ActiveLines from'./ActiveLines';import{SportsContext}from'./ActiveSports';export var GamesContext=/*#__PURE__*/React.createContext();function ActiveGames(){var _useState=useState({moneyline:null,spread:null,total:null}),_useState2=_slicedToArray(_useState,2),games=_useState2[0],setGames=_useState2[1];var _useState3=useState(true),_useState4=_slicedToArray(_useState3,2),isLoading=_useState4[0],setIsLoading=_useState4[1];var sports=useContext(SportsContext);useEffect(function(){var getMoneyLineData=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var response;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return API.getLines(sports[1],'moneyline');case 2:response=_context.sent;return _context.abrupt(\"return\",response.data.data);case 4:case\"end\":return _context.stop();}}},_callee);}));return function getMoneyLineData(){return _ref.apply(this,arguments);};}();var getSpreadData=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){var response;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return API.getLines(sports[1],'spread');case 2:response=_context2.sent;return _context2.abrupt(\"return\",response.data.data);case 4:case\"end\":return _context2.stop();}}},_callee2);}));return function getSpreadData(){return _ref2.apply(this,arguments);};}();var getTotalsData=/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(){var response;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:_context3.next=2;return API.getLines(sports[1],'totals');case 2:response=_context3.sent;return _context3.abrupt(\"return\",response.data.data);case 4:case\"end\":return _context3.stop();}}},_callee3);}));return function getTotalsData(){return _ref3.apply(this,arguments);};}();Promise.all([getMoneyLineData(),getSpreadData(),getTotalsData()]).then(function(values){setGames(_objectSpread(_objectSpread({},games),{},{moneyline:values[0],spread:values[1],total:values[2]}));setIsLoading(false);}).catch(function(err){console.log(err);setIsLoading(false);});},[]);return/*#__PURE__*/_jsx(\"div\",{children:isLoading?'':/*#__PURE__*/_jsx(GamesContext.Provider,{value:games,children:/*#__PURE__*/_jsx(ActiveLines,{})})});};export default ActiveGames;","map":{"version":3,"sources":["/Users/keenanheller/Desktop/bootcamp-homeworks/sportsbook/client/src/components/ActiveGames.js"],"names":["React","useEffect","useState","useContext","API","ActiveLines","SportsContext","GamesContext","createContext","ActiveGames","moneyline","spread","total","games","setGames","isLoading","setIsLoading","sports","getMoneyLineData","getLines","response","data","getSpreadData","getTotalsData","Promise","all","then","values","catch","err","console","log"],"mappings":"mwBAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,CAA2BC,QAA3B,CAAqCC,UAArC,KAAuD,OAAvD,CACA,MAAOC,CAAAA,GAAP,KAAgB,cAAhB,CACA,MAAOC,CAAAA,WAAP,KAAwB,eAAxB,CACA,OAASC,aAAT,KAA8B,gBAA9B,CACA,MAAO,IAAMC,CAAAA,YAAY,cAAGP,KAAK,CAACQ,aAAN,EAArB,CAEP,QAASC,CAAAA,WAAT,EAAuB,eACKP,QAAQ,CAAC,CAAEQ,SAAS,CAAE,IAAb,CAAmBC,MAAM,CAAE,IAA3B,CAAiCC,KAAK,CAAE,IAAxC,CAAD,CADb,wCACdC,KADc,eACPC,QADO,8BAEaZ,QAAQ,CAAC,IAAD,CAFrB,yCAEda,SAFc,eAEHC,YAFG,eAGrB,GAAMC,CAAAA,MAAM,CAAGd,UAAU,CAACG,aAAD,CAAzB,CAEAL,SAAS,CAAC,UAAM,CACd,GAAMiB,CAAAA,gBAAgB,0FAAG,sKACAd,CAAAA,GAAG,CAACe,QAAJ,CAAaF,MAAM,CAAC,CAAD,CAAnB,CAAwB,WAAxB,CADA,QACjBG,QADiB,+CAEhBA,QAAQ,CAACC,IAAT,CAAcA,IAFE,wDAAH,kBAAhBH,CAAAA,gBAAgB,0CAAtB,CAKA,GAAMI,CAAAA,aAAa,2FAAG,4KACGlB,CAAAA,GAAG,CAACe,QAAJ,CAAaF,MAAM,CAAC,CAAD,CAAnB,CAAwB,QAAxB,CADH,QACdG,QADc,iDAEbA,QAAQ,CAACC,IAAT,CAAcA,IAFD,0DAAH,kBAAbC,CAAAA,aAAa,2CAAnB,CAKA,GAAMC,CAAAA,aAAa,2FAAG,4KACGnB,CAAAA,GAAG,CAACe,QAAJ,CAAaF,MAAM,CAAC,CAAD,CAAnB,CAAwB,QAAxB,CADH,QACdG,QADc,iDAEbA,QAAQ,CAACC,IAAT,CAAcA,IAFD,0DAAH,kBAAbE,CAAAA,aAAa,2CAAnB,CAKAC,OAAO,CAACC,GAAR,CAAY,CAACP,gBAAgB,EAAjB,CAAqBI,aAAa,EAAlC,CAAsCC,aAAa,EAAnD,CAAZ,EACGG,IADH,CACQ,SAAAC,MAAM,CAAI,CACdb,QAAQ,gCACHD,KADG,MAENH,SAAS,CAAEiB,MAAM,CAAC,CAAD,CAFX,CAGNhB,MAAM,CAAEgB,MAAM,CAAC,CAAD,CAHR,CAINf,KAAK,CAAEe,MAAM,CAAC,CAAD,CAJP,GAAR,CAMAX,YAAY,CAAC,KAAD,CAAZ,CACD,CATH,EAUGY,KAVH,CAUS,SAAAC,GAAG,CAAI,CACZC,OAAO,CAACC,GAAR,CAAYF,GAAZ,EACAb,YAAY,CAAC,KAAD,CAAZ,CACD,CAbH,EAcD,CA9BQ,CA8BN,EA9BM,CAAT,CAgCA,mBACE,qBACGD,SAAS,CAAG,EAAH,cACR,KAAC,YAAD,CAAc,QAAd,EAAuB,KAAK,CAAEF,KAA9B,uBACE,KAAC,WAAD,IADF,EAFJ,EADF,CASD,EAED,cAAeJ,CAAAA,WAAf","sourcesContent":["import React, { useEffect, useState, useContext } from 'react';\nimport API from '../utils/API';\nimport ActiveLines from './ActiveLines';\nimport { SportsContext } from './ActiveSports';\nexport const GamesContext = React.createContext();\n\nfunction ActiveGames() {\n  const [games, setGames] = useState({ moneyline: null, spread: null, total: null });\n  const [isLoading, setIsLoading] = useState(true);\n  const sports = useContext(SportsContext);\n\n  useEffect(() => {\n    const getMoneyLineData = async () => {\n      const response = await API.getLines(sports[1], 'moneyline');\n      return response.data.data;\n    };\n\n    const getSpreadData = async () => {\n      const response = await API.getLines(sports[1], 'spread');\n      return response.data.data;\n    };\n\n    const getTotalsData = async () => {\n      const response = await API.getLines(sports[1], 'totals');\n      return response.data.data;\n    };\n\n    Promise.all([getMoneyLineData(), getSpreadData(), getTotalsData()])\n      .then(values => {\n        setGames({\n          ...games,\n          moneyline: values[0],\n          spread: values[1],\n          total: values[2],\n        })\n        setIsLoading(false)\n      })\n      .catch(err => {\n        console.log(err);\n        setIsLoading(false)\n      });\n  }, []);\n\n  return (\n    <div>\n      {isLoading ? '' :\n        <GamesContext.Provider value={games}>\n          <ActiveLines />\n        </GamesContext.Provider>\n      }\n    </div>\n  );\n};\n\nexport default ActiveGames;\n"]},"metadata":{},"sourceType":"module"}