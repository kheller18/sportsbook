{"ast":null,"code":"import _regeneratorRuntime from \"/Users/keenanheller/Desktop/bootcamp-homeworks/sportsbook/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/keenanheller/Desktop/bootcamp-homeworks/sportsbook/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/Users/keenanheller/Desktop/bootcamp-homeworks/sportsbook/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/keenanheller/Desktop/bootcamp-homeworks/sportsbook/client/src/components/ActiveGames.js\";\n\nimport React, { useEffect, useState, useContext } from 'react';\nimport API from '../utils/API';\nimport ActiveLines from './ActiveLines';\nimport { SportsContext } from './ActiveSports';\nexport var GamesContext = React.createContext();\n\nvar ActiveGames = function ActiveGames() {\n  var sports = useContext(SportsContext);\n  console.log(sports);\n\n  var _useState = useState({\n    moneyline: null,\n    spread: null\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      games = _useState2[0],\n      setGames = _useState2[1];\n\n  useEffect(function () {\n    var fetchData = /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var getMoneyLines, getSpreadLines;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return API.getLines(sports[1], 'moneyline').then().catch(function (err) {\n                  console.log(err);\n                });\n\n              case 2:\n                getMoneyLines = _context.sent;\n                _context.next = 5;\n                return API.getLines(sports[1], 'spread').then().catch(function (err) {\n                  console.log(err);\n                });\n\n              case 5:\n                getSpreadLines = _context.sent;\n                setGames({\n                  moneyline: getMoneyLines.data,\n                  spread: getSpreadLines.data\n                });\n\n              case 7:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function fetchData() {\n        return _ref.apply(this, arguments);\n      };\n    }(); // async function getMoneyLine() {\n    //   await API.getLines(sports[1], 'moneyline')\n    //     .then(res => {\n    //       setGames(prevGames => [\n    //         ...prevGames,\n    //         {\n    //           moneyline: res.data.data\n    //         }\n    //       ]);\n    //     })\n    //     .catch(err => {\n    //       console.log(err)\n    //     });\n    // };\n    // async function getSpreadLine() {\n    //   await API.getLines(sports[1], 'spread')\n    //     .then(res => {\n    //       setGames(prevGames => [\n    //         ...prevGames, \n    //         {\n    //           spread: res.data.data\n    //         }\n    //       ])\n    //       console.log(games);\n    //     })\n    //     .catch(err => {\n    //       console.log(err)\n    //     });\n    // };\n    // async function getTotalsLine() {\n    //   await API.getLines(sports[1], 'totals')\n    //     .then(res => {\n    //       setGames(prevGames => [\n    //         ...prevGames,\n    //         {\n    //           totals: res.data.data  \n    //         }\n    //       ])\n    //       console.log(games);\n    //     })\n    //     .catch(err => {\n    //       console.log(err)\n    //     });\n    // };\n\n\n    fetchData(); // getTotalsLine();\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 5\n    }\n  });\n};\n\nexport default ActiveGames;","map":{"version":3,"sources":["/Users/keenanheller/Desktop/bootcamp-homeworks/sportsbook/client/src/components/ActiveGames.js"],"names":["React","useEffect","useState","useContext","API","ActiveLines","SportsContext","GamesContext","createContext","ActiveGames","sports","console","log","moneyline","spread","games","setGames","fetchData","getLines","then","catch","err","getMoneyLines","getSpreadLines","data"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,UAArC,QAAuD,OAAvD;AACA,OAAOC,GAAP,MAAgB,cAAhB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,SAASC,aAAT,QAA8B,gBAA9B;AACA,OAAO,IAAMC,YAAY,GAAGP,KAAK,CAACQ,aAAN,EAArB;;AAEP,IAAMC,WAAW,GAAG,SAAdA,WAAc,GAAM;AACxB,MAAMC,MAAM,GAAGP,UAAU,CAACG,aAAD,CAAzB;AACAK,EAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;;AAFwB,kBAGER,QAAQ,CAAC;AAAEW,IAAAA,SAAS,EAAE,IAAb;AAAmBC,IAAAA,MAAM,EAAE;AAA3B,GAAD,CAHV;AAAA;AAAA,MAGjBC,KAHiB;AAAA,MAGVC,QAHU;;AAKxBf,EAAAA,SAAS,CAAC,YAAM;AACd,QAAMgB,SAAS;AAAA,0EAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACYb,GAAG,CAACc,QAAJ,CAAaR,MAAM,CAAC,CAAD,CAAnB,EAAwB,WAAxB,EACzBS,IADyB,GAEzBC,KAFyB,CAEnB,UAAAC,GAAG,EAAI;AACZV,kBAAAA,OAAO,CAACC,GAAR,CAAYS,GAAZ;AACD,iBAJyB,CADZ;;AAAA;AACVC,gBAAAA,aADU;AAAA;AAAA,uBAMalB,GAAG,CAACc,QAAJ,CAAaR,MAAM,CAAC,CAAD,CAAnB,EAAwB,QAAxB,EAC1BS,IAD0B,GAE1BC,KAF0B,CAEpB,UAAAC,GAAG,EAAI;AACZV,kBAAAA,OAAO,CAACC,GAAR,CAAYS,GAAZ;AACD,iBAJ0B,CANb;;AAAA;AAMVE,gBAAAA,cANU;AAYhBP,gBAAAA,QAAQ,CAAC;AAAEH,kBAAAA,SAAS,EAAES,aAAa,CAACE,IAA3B;AAAiCV,kBAAAA,MAAM,EAAES,cAAc,CAACC;AAAxD,iBAAD,CAAR;;AAZgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAH;;AAAA,sBAATP,SAAS;AAAA;AAAA;AAAA,OAAf,CADc,CAed;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEAA,IAAAA,SAAS,GA9DK,CA+Dd;AACD,GAhEQ,EAgEN,EAhEM,CAAT;AAkEA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AAQD,CA/ED;;AAiFA,eAAeR,WAAf","sourcesContent":["import React, { useEffect, useState, useContext } from 'react';\nimport API from '../utils/API';\nimport ActiveLines from './ActiveLines';\nimport { SportsContext } from './ActiveSports';\nexport const GamesContext = React.createContext();\n\nconst ActiveGames = () => {\n  const sports = useContext(SportsContext);\n  console.log(sports)\n  const [games, setGames] = useState({ moneyline: null, spread: null});\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const getMoneyLines = await API.getLines(sports[1], 'moneyline')\n        .then()\n        .catch(err => {\n          console.log(err)\n        });\n      const getSpreadLines = await API.getLines(sports[1], 'spread')\n        .then()\n        .catch(err => {\n          console.log(err)\n        });\n\n      setGames({ moneyline: getMoneyLines.data, spread: getSpreadLines.data });\n    };\n    // async function getMoneyLine() {\n    //   await API.getLines(sports[1], 'moneyline')\n    //     .then(res => {\n    //       setGames(prevGames => [\n    //         ...prevGames,\n    //         {\n    //           moneyline: res.data.data\n    //         }\n    //       ]);\n    //     })\n    //     .catch(err => {\n    //       console.log(err)\n    //     });\n    // };\n\n    // async function getSpreadLine() {\n    //   await API.getLines(sports[1], 'spread')\n    //     .then(res => {\n    //       setGames(prevGames => [\n    //         ...prevGames, \n    //         {\n    //           spread: res.data.data\n    //         }\n    //       ])\n    //       console.log(games);\n    //     })\n    //     .catch(err => {\n    //       console.log(err)\n    //     });\n    // };\n\n    // async function getTotalsLine() {\n    //   await API.getLines(sports[1], 'totals')\n    //     .then(res => {\n    //       setGames(prevGames => [\n    //         ...prevGames,\n    //         {\n    //           totals: res.data.data  \n    //         }\n    //       ])\n    //       console.log(games);\n    //     })\n    //     .catch(err => {\n    //       console.log(err)\n    //     });\n    // };\n\n    fetchData();\n    // getTotalsLine();\n  }, []);\n\n  return (\n    <div>\n      {/* {games.map(game => <div key={game.home_team}>{game.teams[0]} vs. {game.teams[1]}</div>)} */}\n      {/* <GamesContext.Provider value={{games}}>\n        <ActiveLines />\n      </GamesContext.Provider> */}\n    </div>\n  );\n};\n\nexport default ActiveGames;\n"]},"metadata":{},"sourceType":"module"}