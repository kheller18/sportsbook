{"ast":null,"code":"import _toConsumableArray from \"/Users/keenanheller/Desktop/bootcamp-homeworks/sportsbook/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _regeneratorRuntime from \"/Users/keenanheller/Desktop/bootcamp-homeworks/sportsbook/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/keenanheller/Desktop/bootcamp-homeworks/sportsbook/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/Users/keenanheller/Desktop/bootcamp-homeworks/sportsbook/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/keenanheller/Desktop/bootcamp-homeworks/sportsbook/client/src/components/RenderBetSlips.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react'; // import '../styles/BetSlip.css';\n\nimport API from '../utils/API';\nimport BetSlip from './BetSlip';\nimport Button from './Button';\n\nvar RenderBetSlips = function RenderBetSlips(props) {\n  _s();\n\n  var _useState = useState(undefined),\n      _useState2 = _slicedToArray(_useState, 2),\n      toLose = _useState2[0],\n      setToLose = _useState2[1];\n\n  var _useState3 = useState(),\n      _useState4 = _slicedToArray(_useState3, 2),\n      toWin = _useState4[0],\n      setToWin = _useState4[1];\n\n  var newSlips = props.data;\n  var slipSend = [];\n\n  var _useState5 = useState([]),\n      _useState6 = _slicedToArray(_useState5, 2),\n      submitSlips = _useState6[0],\n      setSubmitSlips = _useState6[1];\n\n  var _useState7 = useState([]),\n      _useState8 = _slicedToArray(_useState7, 2),\n      slipList = _useState8[0],\n      setSlipList = _useState8[1];\n\n  var handleDelete = function handleDelete(e) {\n    console.log(e);\n    console.log(e.target.id);\n    console.log(slipList);\n    var newList = slipList.filter(function (slip, id) {\n      return id != e.target.id;\n    });\n    console.log(newList);\n    setSlipList(newList);\n    newSlips = {};\n  };\n\n  var handleClear = function handleClear() {\n    newSlips = {};\n    setSlipList([]);\n  };\n\n  var updateSlip = function updateSlip(id, attributes) {\n    var index = slipList.findIndex(function (x) {\n      return x.id == id;\n    });\n    var updateList = slipList.slice();\n    console.log(index);\n\n    if (index == -1) {} else {// setSlipList([...])\n    }\n  };\n\n  var handleChange = function handleChange(e, data) {\n    console.log(data);\n    console.log(e);\n    console.log(data.odds.toString()[0]);\n\n    switch (data.odds.toString()[0]) {\n      case '-':\n        console.log(data.odds);\n        var tempCalc = Math.abs(e.target.value * data.odds * .01);\n        console.log(tempCalc);\n        var finalCalc = tempCalc - e.target.value;\n        setToLose(e.target.value);\n        data.toLose = e.target.value;\n        console.log((e.target.value - finalCalc).toFixed(2));\n        setToWin((e.target.value - finalCalc).toFixed(2));\n        data.toWin = (e.target.value - finalCalc).toFixed(2);\n        console.log(data); // return data;\n\n        var index = slipList.findIndex(function (x) {\n          return console.log(x);\n        });\n\n        if (slipList.length === 1) {\n          slipList.map(function (slip) {\n            console.log(slip);\n          });\n        } else {}\n\n        var slice = slipList.slice(0, parseInt(e.target.id));\n        console.log(slice);\n        console.log(slipList); // console.log('slice', slice)\n\n        break;\n\n      default:\n        setToLose(e.target.value);\n        data.toLose = e.target.value;\n        console.log((e.target.value * data.odds * .01).toFixed(2));\n        setToWin((e.target.value * data.odds * .01).toFixed(2));\n        data.toWin = (e.target.value * data.odds * .01).toFixed(2);\n        console.log(slipList);\n        break;\n    }\n\n    ;\n  };\n\n  var handleSubmit = function handleSubmit(event) {\n    event.preventDefault();\n    event.persist();\n    console.log(slipList);\n    var userData = JSON.parse(localStorage.getItem('user')); // function to post slip data based on slip type\n\n    var slipData = /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                slipList.map(function (slip) {\n                  console.log(slip);\n                  slipSend.push({\n                    userId: userData._id,\n                    gameKey: slip.data.key,\n                    betType: slip.slipData.type,\n                    team: slip.slipData.team,\n                    line: slip.slipData.line,\n                    odds: slip.slipData.odds,\n                    toLose: slip.slipData.toLose,\n                    toWin: slip.slipData.toWin,\n                    status: slip.slipData.status,\n                    outcome: slip.slipData.outcome,\n                    payout: slip.slipData.payout\n                  });\n                });\n                _context.next = 3;\n                return API.submitBetSlip(slipSend).then(function (res) {\n                  console.log(res);\n\n                  if (res.status === 200) {\n                    console.log('200');\n                    return /*#__PURE__*/_jsxDEV(BetSlipConfirm, {\n                      data: res.data\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 115,\n                      columnNumber: 20\n                    }, _this);\n                  }\n                }).catch(function (err) {\n                  console.log(err);\n                });\n\n              case 3:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function slipData() {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    slipData();\n  };\n\n  useEffect(function () {\n    // setSlips(slips);\n    // const slips = props.data;\n    // const [slipList, setSlipList] = useState();\n    console.log('mounted');\n    console.log(newSlips);\n\n    if (newSlips === undefined || newSlips === {} || newSlips === null) {} else {\n      setSlipList(function (slipList) {\n        return [].concat(_toConsumableArray(slipList), [newSlips]);\n      });\n      console.log(\"added\");\n    }\n\n    console.log(slipList); // setSlips(slips)\n  }, [newSlips]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"slip\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"slip-title\",\n      children: \"BET SLIP\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"slip-tabs\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"slip-tab\",\n        children: \"CART\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"slip-tab\",\n        children: \"PENDING\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 7\n    }, _this), slipList === undefined || slipList.length === 0 ? '' : slipList.map(function (slip, i) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(BetSlip, {\n          data: slip,\n          id: i,\n          onRemove: handleDelete,\n          onSubmit: handleSubmit,\n          onChange: handleChange,\n          onUpdate: updateSlip,\n          toWin: toWin\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 15\n        }, _this)\n      }, slip.data.key, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 13\n      }, _this);\n    }), slipList === undefined || slipList.length === 0 ? '' : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"slip-buttons\",\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        onClick: handleClear,\n        id: props.id,\n        type: \"button\",\n        className: \"slip-button\",\n        children: \"CANCEL\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 11\n      }, _this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: handleSubmit,\n        className: \"slip-button\",\n        id: \"submit-slip\",\n        children: \"PLACE BET(S)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 11\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 9\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 150,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(RenderBetSlips, \"y8Jg2RZrJxPZH7FxQxJujdM0Ay0=\");\n\n_c = RenderBetSlips;\nexport default RenderBetSlips; // take the value from the slip, set it to the array here, then re render the whole page using useffect dependency\n\nvar _c;\n\n$RefreshReg$(_c, \"RenderBetSlips\");","map":{"version":3,"sources":["/Users/keenanheller/Desktop/bootcamp-homeworks/sportsbook/client/src/components/RenderBetSlips.js"],"names":["React","useEffect","useState","API","BetSlip","Button","RenderBetSlips","props","undefined","toLose","setToLose","toWin","setToWin","newSlips","data","slipSend","submitSlips","setSubmitSlips","slipList","setSlipList","handleDelete","e","console","log","target","id","newList","filter","slip","handleClear","updateSlip","attributes","index","findIndex","x","updateList","slice","handleChange","odds","toString","tempCalc","Math","abs","value","finalCalc","toFixed","length","map","parseInt","handleSubmit","event","preventDefault","persist","userData","JSON","parse","localStorage","getItem","slipData","push","userId","_id","gameKey","key","betType","type","team","line","status","outcome","payout","submitBetSlip","then","res","catch","err","i"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\n// import '../styles/BetSlip.css';\nimport API from '../utils/API';\nimport BetSlip from './BetSlip';\nimport Button from './Button';\n\nconst RenderBetSlips = (props) => {\n  const [toLose, setToLose] = useState(undefined);\n  const [toWin, setToWin] = useState();\n  let newSlips = props.data;\n  const slipSend = [];\n  const [submitSlips, setSubmitSlips] = useState([]);\n  const [slipList, setSlipList] = useState([]);\n\n  const handleDelete = (e) => {\n    console.log(e);\n    console.log(e.target.id)\n    console.log(slipList)\n    let newList = slipList.filter((slip, id) => id != e.target.id);\n    console.log(newList)\n    setSlipList(newList);\n    newSlips = {};\n  }\n\n  const handleClear = () => {\n    newSlips = {};\n    setSlipList([]);\n\n  }\n\n  const updateSlip = (id, attributes) => {\n    let index = slipList.findIndex(x => x.id == id);\n    let updateList = slipList.slice()\n    console.log(index);\n    if (index == -1) {\n\n    } else {\n      // setSlipList([...])\n    }\n  }\n\n  const handleChange = (e, data) => {\n    console.log(data);\n    \n    console.log(e);\n    console.log(data.odds.toString()[0]);\n    switch (data.odds.toString()[0]) {\n      case '-':\n        console.log(data.odds)\n        let tempCalc = Math.abs(e.target.value * data.odds * .01);\n        console.log(tempCalc)\n        let finalCalc = tempCalc - e.target.value;\n        setToLose(e.target.value)\n        data.toLose = e.target.value;\n        console.log((e.target.value - finalCalc).toFixed(2))\n        setToWin((e.target.value - finalCalc).toFixed(2));\n        data.toWin=(e.target.value - finalCalc).toFixed(2);\n        console.log(data);\n        // return data;\n        let index = slipList.findIndex(x => console.log(x));\n        if (slipList.length === 1) {\n          slipList.map(slip => {\n            console.log(slip)\n          })\n        } else {\n\n        }\n        let slice = slipList.slice(0, parseInt(e.target.id));\n        console.log(slice);\n        console.log(slipList)\n        // console.log('slice', slice)\n        break;\n      default:\n        setToLose(e.target.value);\n        data.toLose = e.target.value;\n        console.log((e.target.value * data.odds * .01).toFixed(2))\n        setToWin((e.target.value * data.odds * .01).toFixed(2));\n        data.toWin = (e.target.value * data.odds * .01).toFixed(2)\n        console.log(slipList)\n        break;\n    };\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    event.persist();\n    console.log(slipList);\n    const userData = JSON.parse(localStorage.getItem('user'));\n\n    // function to post slip data based on slip type\n    const slipData = async () => {\n\n      slipList.map(slip => {\n        console.log(slip)\n        slipSend.push({\n          userId: userData._id,\n          gameKey: slip.data.key,\n          betType: slip.slipData.type,\n          team: slip.slipData.team,\n          line: slip.slipData.line,\n          odds: slip.slipData.odds,\n          toLose: slip.slipData.toLose,\n          toWin: slip.slipData.toWin,\n          status: slip.slipData.status,\n          outcome: slip.slipData.outcome,\n          payout: slip.slipData.payout\n        })\n      })\n\n      await API.submitBetSlip(slipSend)\n        .then((res) => {\n          console.log(res);\n          if (res.status === 200) {\n            console.log('200')\n            return <BetSlipConfirm data={res.data} />\n          }\n        })\n        .catch(err => {\n          console.log(err);\n        });\n      \n\n\n    };\n\n    slipData();\n  };\n\n  \n\n  useEffect(() => {\n    // setSlips(slips);\n    // const slips = props.data;\n    // const [slipList, setSlipList] = useState();\n    console.log('mounted')\n    console.log(newSlips)\n    if (newSlips === undefined || newSlips === {} || newSlips === null) {\n\n    } else {\n      setSlipList(slipList => [...slipList, newSlips])\n      console.log(\"added\")\n      \n    }\n    console.log(slipList)\n    // setSlips(slips)\n\n  }, [newSlips]);\n\n  return (\n    <div className='slip'>\n      <div className='slip-title'>BET SLIP</div>\n      <div className='slip-tabs'>\n        <div className='slip-tab'>CART</div>\n        <div className='slip-tab'>PENDING</div>\n      </div>\n      {(slipList === undefined || slipList.length === 0) ? '' :\n        slipList.map((slip, i) => {\n          return (\n            <div key={slip.data.key}>\n              <BetSlip data={slip} id={i} onRemove={handleDelete} onSubmit={handleSubmit} onChange={handleChange} onUpdate={updateSlip} toWin={toWin}/>\n            </div>\n          )\n        })\n      }\n      {(slipList === undefined || slipList.length === 0) ? '' : \n        <div className='slip-buttons'>\n          <Button\n            onClick={handleClear}\n            id={props.id}\n            type='button'\n            className='slip-button'\n          >\n            CANCEL\n          </Button>\n          <Button\n            onClick={handleSubmit}\n            className='slip-button'\n            id='submit-slip'\n          >\n            PLACE BET(S)\n          </Button>\n        </div>\n      }\n    </div>\n  )\n};\n\nexport default RenderBetSlips;\n\n// take the value from the slip, set it to the array here, then re render the whole page using useffect dependency"]},"metadata":{},"sourceType":"module"}