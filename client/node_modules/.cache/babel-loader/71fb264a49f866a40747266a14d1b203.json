{"ast":null,"code":"import _toConsumableArray from \"/Users/keenanheller/Desktop/bootcamp-homeworks/sportsbook/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _regeneratorRuntime from \"/Users/keenanheller/Desktop/bootcamp-homeworks/sportsbook/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/keenanheller/Desktop/bootcamp-homeworks/sportsbook/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/Users/keenanheller/Desktop/bootcamp-homeworks/sportsbook/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/keenanheller/Desktop/bootcamp-homeworks/sportsbook/client/src/components/RenderBetSlips.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport '../styles/BetSlip.css';\nimport API from '../utils/API';\nimport BetSlip from './BetSlip';\n\nvar RenderBetSlips = function RenderBetSlips(props) {\n  _s();\n\n  // const [toLose, setToLose] = useState(undefined);\n  // const [toWin, setToWin] = useState();\n  var newSlips = props.data;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      slipList = _useState2[0],\n      setSlipList = _useState2[1];\n\n  var handleDelete = function handleDelete(e) {\n    console.log(e);\n    console.log(e.target.id);\n    console.log(slipList);\n    var newList = slipList.filter(function (slip, id) {\n      return id != e.target.id;\n    });\n    console.log(newList);\n    setSlipList(newList);\n    newSlips = {};\n  }; // const handleChange = (e, data) => {\n  //   console.log(data);\n  //   console.log(e);\n  //   console.log(data.slipData.odds.toString()[0]);\n  //   switch (data.slipData.odds.toString()[0]) {\n  //     case '-':\n  //       console.log(data.slipData.odds)\n  //       let tempCalc = Math.abs(e.target.value * data.slipData.odds * .01);\n  //       console.log(tempCalc)\n  //       let finalCalc = tempCalc - e.target.value;\n  //       setToLose(e.target.value)\n  //       console.log((e - finalCalc).toFixed(2))\n  //       setToWin((e.target.value - finalCalc).toFixed(2));\n  //       break;\n  //     default:\n  //       setToLose(e);\n  //       console.log((e * data.slipData.odds * .01).toFixed(2))\n  //       setToWin((e * data.slipData.odds * .01).toFixed(2));\n  //       break;\n  //   };\n  // };\n\n\n  var handleSubmit = function handleSubmit(event) {\n    event.preventDefault();\n    event.persist();\n    console.log(slipList);\n    var userData = JSON.parse(localStorage.getItem('user'));\n    var userId = userData._id;\n    var gameKey = props.data.data.key;\n    var betType = props.data.slipData.type;\n    var team = props.data.slipData.team;\n    var odds = props.data.slipData.odds;\n    var outcome = null;\n    var payout = null;\n    var toLose = null;\n    var toWin = null;\n    var line = null;\n    var status = 'LIVE'; // function to post slip data based on slip type\n\n    var slipData = /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.t0 = betType;\n                _context.next = _context.t0 === 'MONEYLINE' ? 3 : _context.t0 === 'SPREAD' ? 6 : _context.t0 === 'TOTALS-OVER' ? 10 : _context.t0 === 'TOTALS-UNDER' ? 14 : 18;\n                break;\n\n              case 3:\n                _context.next = 5;\n                return API.submitBetSlip({\n                  userId,\n                  gameKey,\n                  betType,\n                  team,\n                  line,\n                  odds,\n                  toLose,\n                  toWin,\n                  status,\n                  outcome,\n                  payout\n                }).then(function (res) {\n                  console.log(res);\n                }).catch(function (err) {\n                  console.log(err);\n                });\n\n              case 5:\n                return _context.abrupt(\"break\", 20);\n\n              case 6:\n                line = props.data.slipData.line;\n                _context.next = 9;\n                return API.submitBetSlip({\n                  userId,\n                  gameKey,\n                  betType,\n                  team,\n                  line,\n                  odds,\n                  toLose,\n                  toWin,\n                  status,\n                  outcome,\n                  payout\n                }).then(function (res) {\n                  console.log(res);\n                }).catch(function (err) {\n                  console.log(err);\n                });\n\n              case 9:\n                return _context.abrupt(\"break\", 20);\n\n              case 10:\n                line = props.data.slipData.line;\n                _context.next = 13;\n                return API.submitBetSlip({\n                  userId,\n                  gameKey,\n                  betType,\n                  team,\n                  line,\n                  odds,\n                  toLose,\n                  toWin,\n                  status,\n                  outcome,\n                  payout\n                }).then(function (res) {\n                  console.log(res);\n                }).catch(function (err) {\n                  console.log(err);\n                });\n\n              case 13:\n                return _context.abrupt(\"break\", 20);\n\n              case 14:\n                line = props.data.slipData.line;\n                _context.next = 17;\n                return API.submitBetSlip({\n                  userId,\n                  gameKey,\n                  betType,\n                  team,\n                  line,\n                  odds,\n                  toLose,\n                  toWin,\n                  status,\n                  outcome,\n                  payout\n                }).then(function (res) {\n                  console.log(res);\n                }).catch(function (err) {\n                  console.log(err);\n                });\n\n              case 17:\n                return _context.abrupt(\"break\", 20);\n\n              case 18:\n                console.log('none selected');\n                return _context.abrupt(\"break\", 20);\n\n              case 20:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function slipData() {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    slipData();\n  };\n\n  useEffect(function () {\n    // setSlips(slips);\n    // const slips = props.data;\n    // const [slipList, setSlipList] = useState();\n    console.log('mounted');\n    console.log(newSlips);\n\n    if (newSlips === undefined || newSlips === {} || newSlips === null) {} else {\n      setSlipList(function (slipList) {\n        return [].concat(_toConsumableArray(slipList), [newSlips]);\n      });\n      console.log(\"added\");\n    }\n\n    console.log(slipList); // setSlips(slips)\n  }, [newSlips]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"slip\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"slip-title\",\n      children: \"BET SLIP\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }, _this), slipList === undefined || slipList.length === 0 ? '' : slipList.map(function (slip, i) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(BetSlip, {\n          data: slip,\n          id: i,\n          onRemove: handleDelete,\n          onSubmit: handleSubmit\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 15\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 13\n      }, _this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 131,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(RenderBetSlips, \"I7suFpasdNjqVsCeepCoKXFqXnU=\");\n\n_c = RenderBetSlips;\nexport default RenderBetSlips;\n\nvar _c;\n\n$RefreshReg$(_c, \"RenderBetSlips\");","map":{"version":3,"sources":["/Users/keenanheller/Desktop/bootcamp-homeworks/sportsbook/client/src/components/RenderBetSlips.js"],"names":["React","useEffect","useState","API","BetSlip","RenderBetSlips","props","newSlips","data","slipList","setSlipList","handleDelete","e","console","log","target","id","newList","filter","slip","handleSubmit","event","preventDefault","persist","userData","JSON","parse","localStorage","getItem","userId","_id","gameKey","key","betType","slipData","type","team","odds","outcome","payout","toLose","toWin","line","status","submitBetSlip","then","res","catch","err","undefined","length","map","i"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport '../styles/BetSlip.css';\nimport API from '../utils/API';\nimport BetSlip from './BetSlip';\n\nconst RenderBetSlips = (props) => {\n  // const [toLose, setToLose] = useState(undefined);\n  // const [toWin, setToWin] = useState();\n  let newSlips = props.data;\n  const [slipList, setSlipList] = useState([]);\n\n  const handleDelete = (e) => {\n    console.log(e);\n    console.log(e.target.id)\n    console.log(slipList)\n    let newList = slipList.filter((slip, id) => id != e.target.id);\n    console.log(newList)\n    setSlipList(newList);\n    newSlips = {};\n  }\n\n  // const handleChange = (e, data) => {\n  //   console.log(data);\n  //   console.log(e);\n  //   console.log(data.slipData.odds.toString()[0]);\n  //   switch (data.slipData.odds.toString()[0]) {\n  //     case '-':\n  //       console.log(data.slipData.odds)\n  //       let tempCalc = Math.abs(e.target.value * data.slipData.odds * .01);\n  //       console.log(tempCalc)\n  //       let finalCalc = tempCalc - e.target.value;\n  //       setToLose(e.target.value)\n  //       console.log((e - finalCalc).toFixed(2))\n  //       setToWin((e.target.value - finalCalc).toFixed(2));\n  //       break;\n  //     default:\n  //       setToLose(e);\n  //       console.log((e * data.slipData.odds * .01).toFixed(2))\n  //       setToWin((e * data.slipData.odds * .01).toFixed(2));\n  //       break;\n  //   };\n  // };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    event.persist();\n    console.log(slipList);\n    const userData = JSON.parse(localStorage.getItem('user'));\n    const userId = userData._id;\n    const gameKey = props.data.data.key;\n    const betType = props.data.slipData.type;\n    const team = props.data.slipData.team;\n    const odds = props.data.slipData.odds;\n    const outcome = null;\n    const payout = null;\n    const toLose = null;\n    const toWin = null;\n    let line = null;\n    const status = 'LIVE';\n\n    // function to post slip data based on slip type\n    const slipData = async () => {\n      switch (betType) {\n        case 'MONEYLINE':\n          await API.submitBetSlip({userId, gameKey, betType, team, line, odds, toLose, toWin, status, outcome, payout})\n            .then((res) => {\n              console.log(res);\n            })\n            .catch(err => {\n              console.log(err);\n            });\n          break;\n        case 'SPREAD':\n          line = props.data.slipData.line;\n          await API.submitBetSlip({userId, gameKey, betType, team, line, odds, toLose, toWin, status, outcome, payout})\n            .then((res) => {\n              console.log(res);\n            })\n            .catch(err => {\n              console.log(err);\n            });\n          break;\n        case 'TOTALS-OVER':\n          line = props.data.slipData.line;\n          await API.submitBetSlip({userId, gameKey, betType, team, line, odds, toLose, toWin, status, outcome, payout})\n            .then((res) => {\n              console.log(res);\n            })\n            .catch(err => {\n              console.log(err);\n            });\n          break;\n        case 'TOTALS-UNDER':\n          line = props.data.slipData.line;\n          await API.submitBetSlip({userId, gameKey, betType, team, line, odds, toLose, toWin, status, outcome, payout})\n            .then((res) => {\n              console.log(res);\n            })\n            .catch(err => {\n              console.log(err);\n            });\n          break;\n        default:\n          console.log('none selected');\n          break;\n      }\n    };\n\n    slipData();\n  };\n\n  useEffect(() => {\n    // setSlips(slips);\n    // const slips = props.data;\n    // const [slipList, setSlipList] = useState();\n    console.log('mounted')\n    console.log(newSlips)\n    if (newSlips === undefined || newSlips === {} || newSlips === null) {\n\n    } else {\n      setSlipList(slipList => [...slipList, newSlips])\n      console.log(\"added\")\n      \n    }\n    console.log(slipList)\n    // setSlips(slips)\n\n  }, [newSlips]);\n\n  return (\n    <div className='slip'>\n      <div className='slip-title'>BET SLIP</div>\n      {(slipList === undefined || slipList.length === 0) ? '' :\n        slipList.map((slip, i) => {\n          return (\n            <div>\n              <BetSlip data={slip} id={i} onRemove={handleDelete} onSubmit={handleSubmit} />\n            </div>\n          )\n        })\n      }\n    </div>\n  )\n};\n\nexport default RenderBetSlips;\n"]},"metadata":{},"sourceType":"module"}